		; serial-port ROM monitor/boot for debugging Kaypro.
		; Uses "aux serial" a.k.a "Serial Printer" port.
		
0024          	VERN	equ	024h	; ROM version
		
0000          	rom2k	equ	0
		
0000          	 if rom2k
		 else
1000          	romsiz	equ	1000h	; minimum space for ROM
		 endif
		
			maclib	z80
**** z80.lib ****
**** monitor.asm ****
		
0000          	false	equ	0
FFFF          	true	equ	not false
		
			$*macro
		
000D          	CR	equ	13
000A          	LF	equ	10
0003          	CTLC	equ	3
0007          	BEL	equ	7
0009          	TAB	equ	9
0008          	BS	equ	8
001B          	ESC	equ	27
0000          	TRM	equ	0
007F          	DEL	equ	127
		
		; WD1943 at 5.0688MHz...
000E          	B9600	equ	0eh
0005          	B300	equ	05h
		; */84 (and 10) sysport drive select
0002          	DS0	equ	0010b
0001          	DS1	equ	0001b
0003          	DSNONE	equ	0011b	; also mask
0010          	K84MTR	equ	00010000b	; */84 (10) MOTOR control, 1=ON
0010          	K83PPS	equ	00010000b	; */83 ParPrt strobe (normally 0)
0040          	K84CCG	equ	01000000b	; */84 (10) CharGen A12
0040          	K83MTR	equ	01000000b	; */83 MOTOR control, 1=OFF
		
0004          	sio1	equ	04h	; "serial data", "keyboard"
000C          	sio2	equ	0ch	; "serial printer", "modem"
0000          	brd1	equ	00h
0008          	brd2	equ	08h
		
0000          	sioA	equ	00h	; offsets
0001          	sioB	equ	01h
		
0000          	sioD	equ	00h	; offsets
0002          	sioC	equ	02h
		
		; Choose Z80SIO port to use...
0004          	condat	equ	sio1+sioA+sioD
0006          	conctl	equ	sio1+sioA+sioC
0000          	conbrr	equ	brd1
		
0005          	kbddat	equ	sio1+sioB+sioD
0007          	kbdctl	equ	sio1+sioB+sioC
000C          	kbdbrr	equ	0ch	; */83 uses WD1943, else hardwired to 300 baud
		
001C          	crtctl	equ	1ch	; */84 and 10 only
001D          	crtdat	equ	1dh	; */84 and 10 only
001F          	crtram	equ	1fh	; also accesses CRTC
		
0014          	sysp84	equ	14h	; sysport on */84 (and 10). */83 have nothing here.
		
0010          	fpysts	equ	10h
0010          	fpycmd	equ	10h
0011          	fpytrk	equ	11h
0012          	fpysec	equ	12h
0013          	fpydat	equ	13h
		
0080          	hdddat	equ	80h
0081          	hdderr	equ	81h
0082          	hddcnt	equ	82h
0083          	hddsec	equ	83h
0084          	hddclo	equ	84h
0085          	hddchi	equ	85h
0086          	hddsdh	equ	86h
0087          	hddcmd	equ	87h
		
0000          	stack	equ	00000h	; stack at top of memory (wrapped)
		
		; Start of ROM code
0000          		org	00000h
0008          	rst0e	equ	$+8
0000  C37000  		jmp	init
0003  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0010          	rst1e	equ	$+8
0008  C34B00  	rst1:	jmp	swtrap
000B  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0018          	rst2e	equ	$+8
0010  C34B00  	rst2:	jmp	swtrap
0013  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0020          	rst3e	equ	$+8
0018  C34B00  	rst3:	jmp	swtrap
001B  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0028          	rst4e	equ	$+8
0020  C34B00  	rst4:	jmp	swtrap
0023  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0030          	rst5e	equ	$+8
0028  C34B00  	rst5:	jmp	swtrap
002B  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0038          	rst6e	equ	$+8
0030  C34B00  	rst6:	jmp	swtrap
0033  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
0040          	rst7e	equ	$+8
0038  C34B00  	rst7:	jmp	swtrap
003B  FFFFFFFF		db	0ffh,0ffh,0ffh,0ffh,0ffh
      FF
		
			; NMI not a problem?
		
0040  0D0A2A2A	swt:	db	CR,LF,'*** RST ',TRM
      2A205253
      542000
		
004B  F3      	swtrap:	di		; try to recover return address...
004C  D1      		pop	d	; should be caller of RST...
004D  310000  		lxi	sp,stack
0050  D5      		push	d	; not needed?
0051  214000  		lxi	h,swt
0054  CDD708  		call	msgprt
0057  D1      		pop	d
0058  CDAE08  		call	taddr
005B  CDCD08  		call	crlf
			; TODO: print address, etc...
005E  C3E200  		jmp	debug
		
			rept	0066h-$
0061  FF      		db	0ffh
0062  FF      		db	0ffh
0063  FF      		db	0ffh
0064  FF      		db	0ffh
0065  FF      		db	0ffh
0066  C9      	nmi:	ret
		
0067  18      	sioini:	db	18h	; reset
0068  0444    		db	4,044h	; 16x, 1s, Np
006A  03C1    		db	3,0c1h	; 8b, RxEn
006C  05EA    		db	5,0eah	; DTR, 8b, TxEn, RTS
006E  0100    		db	1,000h	;
0009          	siolen	equ	$-sioini
		
		; ROM start point - initialize everything
		; We know we have 64K RAM...
0070  F3      	init:	di
0071  310000  		lxi	sp,stack
		
			; init serial port
0074  3E0E    		mvi	a,B9600
0076  D300    		out	conbrr
0078  216700  		lxi	h,sioini
007B  0E06    		mvi	c,conctl
007D  0609    		mvi	b,siolen
007F          		outir
007F  EDB3    		DB	0EDH,0B3H
		
0081  21C500  		lxi	h,signon
0084  CDD708  		call	msgprt
		
0087  CD8F09  		call	proginit
			; save registers on stack, for debugger access...
008A  C3E200  		jmp	debug
		
008D          	belout:
008D  0E07    		mvi	c,BEL
		; Output char to console
		; C=char
008F          	conout:
008F  DB06    		in	conctl
0091  E604    		ani	00000100b
0093          		jrz	conout
0093  28FA    		DB	28H,conout-$-1
0095  79      		mov	a,c
0096  D304    		out	condat
0098  C9      		ret
		
0099  0D0A3A20	prompt:	db	CR,LF,': ',TRM
      00
		
		; Get char from console
		; Returns: A=char, stripped
009E  E5      	conin:	push	h
009F  210000  	ci2:	lxi	h,0
00A2  DB06    	ci0:	in	conctl		; 11
00A4  E601    		ani	00000001b	;  7
00A6          		jrnz	ci1		;  7
00A6  200A    		DB	20H,ci1-$-1
00A8  2B      		dcx	h		;  6
00A9  7D      		mov	a,l		;  4
00AA  B4      		ora	h		;  4
00AB          		jrnz	ci0		; 12 = 51 (12.75uS) (~0.8 sec)
00AB  20F5    		DB	20H,ci0-$-1
00AD  CDB309  		call	progress	; on */83 (20.4uS or ~1.3 sec)
00B0          		jr	ci2
00B0  18ED    		DB	18H,ci2-$-1
00B2  DB04    	ci1:	in	condat
00B4  E67F    		ani	07fh
00B6  E1      		pop	h
00B7  C9      		ret
		
		; Get char from console, toupper and echo
00B8          	conine:
00B8  CD9E00  		call	conin
00BB  CDF208  		call	toupper
00BE  F5      		push	psw
00BF  4F      		mov	c,a
00C0  CD8F00  		call	conout
00C3  F1      		pop	psw
00C4  C9      		ret
		
00C5  0D0A4B61	signon:	db	CR,LF,'Kaypro'
      7970726F
0000          	 if rom2k
		 endif
00CD  204D6F6E		db	' Monitor v'
      69746F72
      2076
00D7  322E34  	vernum:	db	(VERN SHR 4)+'0','.',(VERN AND 0fh)+'0'
00DA  0D0A00  		db	CR,LF,TRM
		
00DD  0D0A073F	errm:	db	CR,LF,BEL,'?',TRM
      00
		
		*********************************************************
		**  Debug mode
		*********************************************************
		
00E2          	debug:
00E2  310000  	cilp:	lxi	sp,stack
00E5  21E200  		lxi	h,cilp		;setup return address
00E8  E5      		push	h
00E9  219900  		lxi	h,prompt	;prompt for a command
00EC  CDD708  		call	msgprt
00EF  CDFB08  		call	linein		;wait for command line to be entered
00F2  CDA209  		call	progoff		; turn off progress indicators
00F5  1104FF  		lxi	d,line
00F8  CD4909  		call	char		;get first character
00FB  C8      		rz			;ignore line if it is empty
00FC  211601  		lxi	h,comnds	;search table for command character
00FF  060B    		mvi	b,ncmnds	;(number of commands)
0101  BE      	cci0:	cmp	m		;search command table
0102  23      		inx	h
0103          		jrz	gotocmd		;command was found, execute it
0103  280A    		DB	28H,gotocmd-$-1
0105  23      		inx	h		;step past routine address
0106  23      		inx	h
0107          		djnz	cci0		;loop untill all valid commands are checked
0107  10F8    		DB	10H,cci0-$-1
0109  21DD00  	error:	lxi	h,errm		;if command unknown, beep and re-prompt
010C  C3D708  		jmp	msgprt
		
010F          	gotocmd:
010F  D5      		push	d		;save command line buffer pointer
0110  5E      		mov	e,m		;get command routine address
0111  23      		inx	h
0112  56      		mov	d,m		;DE = routine address
0113  EB      		xchg			;HL = routine address
0114  D1      		pop	d		;restore buffer pointer
0115  E9      		pchl			;jump to command routine
		
		; All commands are started with DE=next char in line buffer
0116          	comnds:
0116  3F      		db	'?'
0117  0E03    		dw	Qcomnd
0119  44      		db	'D'
011A  B603    		dw	Dcomnd
011C  53      		db	'S'
011D  1C04    		dw	Scomnd
011F  47      		db	'G'
0120  8404    		dw	Gcomnd
0122  4D      		db	'M'
0123  1503    		dw	Mcomnd
0125  46      		db	'F'
0126  7603    		dw	Fcomnd
0128  49      		db	'I'
0129  BF04    		dw	Icomnd
012B  4F      		db	'O'
012C  1105    		dw	Ocomnd
012E  4E      		db	'N'
012F  4605    		dw	Ncomnd
0131  54      		db	'T'
0132  FE05    		dw	Tcomnd
0134  56      		db	'V'
0135  A808    		dw	Vcomnd
000B          	ncmnds	equ	($-comnds)/3
		
		*********************************************************
		**  Command subroutines
		*********************************************************
		
0137          	menu:
0137  0D0A4420		db	CR,LF,'D <start> <end> - display memory in HEX'
      3C737461
      72743E20
      3C656E64
      3E202D20
      64697370
      6C617920
      6D656D6F
      72792069
      6E204845
      58
0160  0D0A5320		db	CR,LF,'S <start> - set/view memory'
      3C737461
      72743E20
      2D207365
      742F7669
      6577206D
      656D6F72
      79
017D  0D0A2020		db	CR,LF,'    (CR) = skip fwd, ''-'' = skip bkwd, ''.'' = done'
      20202843
      5229203D
      20736B69
      70206677
      642C2027
      2D27203D
      20736B69
      7020626B
      77642C20
      272E2720
      3D20646F
      6E65
01AF  0D0A4720		db	CR,LF,'G <start> - go to address'
      3C737461
      72743E20
      2D20676F
      20746F20
      61646472
      657373
01CA  0D0A4620		db	CR,LF,'F <start> <end> <data> - fill memory'
      3C737461
      72743E20
      3C656E64
      3E203C64
      6174613E
      202D2066
      696C6C20
      6D656D6F
      7279
01F0  0D0A4D20		db	CR,LF,'M <start> <end> <dest> - Move data'
      3C737461
      72743E20
      3C656E64
      3E203C64
      6573743E
      202D204D
      6F766520
      64617461
0214  0D0A4920		db	CR,LF,'I <port> [num] - Input from port'
      3C706F72
      743E205B
      6E756D5D
      202D2049
      6E707574
      2066726F
      6D20706F
      7274
0236  0D0A4F20		db	CR,LF,'O <port> <value> [...] - Output to port'
      3C706F72
      743E203C
      76616C75
      653E205B
      2E2E2E5D
      202D204F
      75747075
      7420746F
      20706F72
      74
025F  0D0A4E20		db	CR,LF,'N <hw> - iNitialize hardware (KB83'
      3C68773E
      202D2069
      4E697469
      616C697A
      65206861
      72647761
      72652028
      4B423833
FFFF          	 if not rom2k
0283  2C204B42		db		', KB84, CRTC, HDD'
      38342C20
      43525443
      2C204844
      44
		 endif
0294  29      		db		')'
0295  0D0A5420		db	CR,LF,'T <hw> - Test hardware'
      3C68773E
      202D2054
      65737420
      68617264
      77617265
02AD  0D0A2020		db	CR,LF,'  (KBD'
      284B4244
FFFF          	 if not rom2k
02B5  2C204352		db		', CRTC, VRT, CRTR, HDD, HDRD'
      54432C20
      5652542C
      20435254
      522C2048
      44442C20
      48445244
		 endif
02D1  2C204644		db		', FDRD, FLPY)'
      52442C20
      464C5059
      29
02DE  0D0A5620		db	CR,LF,'V - Show ROM version'
      2D205368
      6F772052
      4F4D2076
      65727369
      6F6E
02F4  0D0A5E43		db	CR,LF,'^C aborts command entry'
      2061626F
      72747320
      636F6D6D
      616E6420
      656E7472
      79
030D  00      		db	TRM
		
030E          	Qcomnd:
030E  213701  		lxi	h,menu
0311  CDD708  		call	msgprt
0314  C9      		ret
		
0315  CD5509  	Mcomnd:	call	getaddr
0318  DA0901  		jc	error
031B          		bit	7,b
031B  CB78    		DB	0CBH,7*8+b+40H
031D  C20901  		jnz	error
0320  2200FF  		shld	addr0
0323  CD5509  		call	getaddr
0326  DA0901  		jc	error
0329          		bit	7,b
0329  CB78    		DB	0CBH,7*8+b+40H
032B  C20901  		jnz	error
032E  2202FF  		shld	addr1
0331  CD5509  		call	getaddr
0334  DA0901  		jc	error
0337          		bit	7,b
0337  CB78    		DB	0CBH,7*8+b+40H
0339  C20901  		jnz	error
033C  EB      		xchg
033D          		lbcd	addr0
033D  ED4B    		DB	0EDH,4BH
033F  00FF    		DW	addr0
0341  2A02FF  		lhld	addr1
0344  B7      		ora	a
0345          		dsbc	b
0345  ED42    		DB	0EDH,b*8+42H
0347  DA0901  		jc	error
034A  23      		inx	h
034B  4D      		mov	c,l
034C  44      		mov	b,h
034D  D5      		push	d
034E  EB      		xchg
034F  09      		dad	b
0350  D1      		pop	d
0351  DA0901  		jc	error
0354  2A02FF  		lhld	addr1
0357  CDEC08  		call	check
035A  DA7003  		jc	mc0
035D  2A00FF  		lhld	addr0
0360  CDEC08  		call	check
0363  D27003  		jnc	mc0
0366  2A02FF  		lhld	addr1
0369  EB      		xchg
036A  09      		dad	b
036B  2B      		dcx	h
036C  EB      		xchg
036D          		lddr
036D  EDB8    		DB	0EDH,0B8H
036F  C9      		ret
0370  2A00FF  	mc0:	lhld	addr0
0373          		ldir
0373  EDB0    		DB	0EDH,0B0H
0375  C9      		ret
0376          	Fcomnd:
0376  CD5509  		call	getaddr ;get address to start at
0379  DA0901  		jc	error	;error if non-hex character
037C          		bit	7,b	;test for no address (different from 0000)
037C  CB78    		DB	0CBH,7*8+b+40H
037E  C20901  		jnz	error	;error if no address was entered
0381  2200FF  		shld	addr0	;save starting address
0384  CD5509  		call	getaddr ;get stop address
0387  DA0901  		jc	error	;error if non-hex character
038A          		bit	7,b	;test for no entry
038A  CB78    		DB	0CBH,7*8+b+40H
038C  C20901  		jnz	error	;error if no stop address
038F  2202FF  		shld	addr1	;save stop address
0392  CD5509  		call	getaddr ;get fill data
0395  DA0901  		jc	error	;error if non-hex character
0398          		bit	7,b	;test for no entry
0398  CB78    		DB	0CBH,7*8+b+40H
039A  C20901  		jnz	error	;error if no fill data
039D  7C      		mov	a,h
039E  B7      		ora	a
039F  C20901  		jnz	error
03A2  4D      		mov	c,l	;(C)=fill data
03A3  2A02FF  		lhld	addr1	;get stop address
03A6          		lded	addr0	;get start address
03A6  ED5B    		DB	0EDH,5BH
03A8  00FF    		DW	addr0
03AA  79      	fc0:	mov	a,c	;
03AB  12      		stax	d	;put byte in memory
03AC  13      		inx	d	;step to next byte
03AD  7A      		mov	a,d	;
03AE  B3      		ora	e	;if we reach 0000, stop. (don't wrap around)
03AF  C8      		rz		;
03B0  CDEC08  		call	check	;test for past stop address
03B3  D8      		rc	;quit if past stop address
03B4          		jr	fc0
03B4  18F4    		DB	18H,fc0-$-1
		
03B6          	Dcomnd:		;display memory
03B6  CD5509  		call	getaddr ;get address to start at
03B9  DA0901  		jc	error	;error if non-hex character
03BC          		bit	7,b	;test for no address (different from 0000)
03BC  CB78    		DB	0CBH,7*8+b+40H
03BE  C20901  		jnz	error	;error if no address was entered
03C1  2200FF  		shld	addr0	;save starting address
03C4  CD5509  		call	getaddr ;get stop address
03C7  DA0901  		jc	error	;error if non-hex character
03CA          		bit	7,b	;test for no entry
03CA  CB78    		DB	0CBH,7*8+b+40H
03CC  C20901  		jnz	error	;error if no stop address
03CF          		lded	addr0	;get start address into (DE)
03CF  ED5B    		DB	0EDH,5BH
03D1  00FF    		DW	addr0
03D3  CDCD08  	dis0:	call	crlf	;start on new line
03D6  CDAE08  		call	taddr	;print current address
03D9  CDC808  		call	space	;delimit it from data
03DC  0610    		mvi	b,16	;display 16 bytes on each line
03DE  1A      	dis1:	ldax	d	;get byte to display
03DF  13      		inx	d	;step to next byte
03E0  CDB308  		call	hexout	;display this byte in HEX
03E3  CDC808  		call	space	;delimit it from others
03E6  7A      		mov	a,d
03E7  B3      		ora	e	;if we reach 0000, stop. (don't wrap around)
03E8          		jrz	dis2
03E8  2807    		DB	28H,dis2-$-1
03EA  CDEC08  		call	check	;test for past stop address
03ED          		jrc	dis2	;quit if past stop address
03ED  3802    		DB	38H,dis2-$-1
03EF          		djnz	dis1	;else do next byte on this line
03EF  10ED    		DB	10H,dis1-$-1
03F1  CDC808  	dis2:	call	space	;delimit it from data
03F4  CDC808  		call	space
03F7          		lded	addr0
03F7  ED5B    		DB	0EDH,5BH
03F9  00FF    		DW	addr0
03FB  0610    		mvi	b,16	;display 16 bytes on each line
03FD  1A      	dis3:	ldax	d	;get byte to display
03FE  13      		inx	d	;step to next byte
03FF  0E2E    		mvi	c,'.'
0401  FE20    		cpi	' '
0403          		jrc	dis4
0403  3805    		DB	38H,dis4-$-1
0405  FE7F    		cpi	'~'+1
0407          		jrnc	dis4
0407  3001    		DB	30H,dis4-$-1
0409  4F      		mov	c,a
040A  CD8F00  	dis4:	call	conout
040D  7A      		mov	a,d
040E  B3      		ora	e	;if we reach 0000, stop. (don't wrap around)
040F  C8      		rz
0410  CDEC08  		call	check	;test for past stop address
0413  D8      		rc	;quit if past stop address
0414          		djnz	dis3	;else do next byte on this line
0414  10E7    		DB	10H,dis3-$-1
0416          		sded	addr0
0416  ED53    		DB	0EDH,53H
0418  00FF    		DW	addr0
041A          		jr	dis0	;when line is finished, start another
041A  18B7    		DB	18H,dis0-$-1
		
041C          	Scomnd: 		;substitute (set) memory
041C  CD5509  		call	getaddr ;get address to start substitution at
041F  DA0901  		jc	error	;error if non-hex character
0422          		bit	7,b	;test for no entry
0422  CB78    		DB	0CBH,7*8+b+40H
0424  C20901  		jnz	error	;error if no address
0427  EB      		xchg		;put address in (DE)
0428  CDCD08  	sb1:	call	crlf	;start on new line
042B  CDAE08  		call	taddr	;print address
042E  CDC808  		call	space	;and delimit it
0431  1A      		ldax	d	;get current value of byte
0432  CDB308  		call	hexout	;and display it
0435  CDC808  		call	space	;delimit it from user's (posible) entry
0438  0600    		mvi	b,0	;zero accumilator for user's entry
043A  CDB800  	sb2:	call	conine	;get user's first character
043D  FE0D    		cpi	CR	;if CR then skip to next byte
043F          		jrz	foward
043F  2833    		DB	28H,foward-$-1
0441  FE20    		cpi	' '	;or if Space then skip to next
0443          		jrz	foward
0443  282F    		DB	28H,foward-$-1
0445  FE2D    		cpi	'-'	;if Minus then step back to previous address
0447          		jrz	bakwrd
0447  282E    		DB	28H,bakwrd-$-1
0449  FE2E    		cpi	'.'	;if Period then stop substitution
044B  C8      		rz
044C  CD7C09  		call	hexcon	;if none of the above, should be HEX digit
044F          		jrc	error0	;error if not
044F  3829    		DB	38H,error0-$-1
0451          		jr	sb3	;start accumilating HEX digits
0451  1805    		DB	18H,sb3-$-1
0453  CD7C09  	sb0:	call	hexcon	;test for HEX digit
0456          		jrc	error1	;error if not HEX
0456  3827    		DB	38H,error1-$-1
0458          	sb3:	slar	b	;roll accumilator to receive new digit
0458  CB20    		DB	0CBH, 20H + b
045A          		slar	b
045A  CB20    		DB	0CBH, 20H + b
045C          		slar	b
045C  CB20    		DB	0CBH, 20H + b
045E          		slar	b
045E  CB20    		DB	0CBH, 20H + b
0460  B0      		ora	b	;merge in new digit
0461  47      		mov	b,a
0462  CDB800  	sb4:	call	conine	;get next character
0465  FE0D    		cpi	CR	;if CR then put existing byte into memory
0467          		jrz	putbyte ;  and step to next.
0467  2809    		DB	28H,putbyte-$-1
0469  FE2E    		cpi	'.'
046B  C8      		rz
046C  FE7F    		cpi	del	;if DEL then restart at same address
046E          		jrz	sb1
046E  28B8    		DB	28H,sb1-$-1
0470          		jr	sb0	;else continue entering hex digits
0470  18E1    		DB	18H,sb0-$-1
0472          	putbyte:
0472  78      		mov	a,b	;store accumilated byte in memory
0473  12      		stax	d
0474          	foward:
0474  13      		inx	d	;step to next location
0475          		jr	sb1	;and allow substitution there
0475  18B1    		DB	18H,sb1-$-1
		
0477          	bakwrd:
0477  1B      		dcx	d	;move address backward one location
0478          		jr	sb1
0478  18AE    		DB	18H,sb1-$-1
		
047A  CD8D00  	error0:	call	belout	;user's entry was not valid, beep and continue
047D          		jr	sb2
047D  18BB    		DB	18H,sb2-$-1
047F  CD8D00  	error1:	call	belout	;same as above but for different section of routine
0482          		jr	sb4
0482  18DE    		DB	18H,sb4-$-1
		
0484          	Gcomnd: 		;jump to address given by user
0484  CD5509  		call	getaddr ;get address to jump to
0487  DA0901  		jc	error	;error if non-hex character
048A          		bit	7,b	;test for no entry
048A  CB78    		DB	0CBH,7*8+b+40H
048C  C20901  		jnz	error	;error if no address entered
048F  CDCD08  		call	crlf	;on new line,
0492  0E47    		mvi	c,'G'	;display "GO aaaa?" to ask
0494  CD8F00  		call	conout	;user to verify that we should
0497  0E4F    		mvi	c,'O'	;jump to this address (in case user
0499  CD8F00  		call	conout	;made a mistake we should not blindly
049C  CDC808  		call	space	;commit suicide)
049F  EB      		xchg
04A0  CDAE08  		call	taddr
04A3  CDC808  		call	space
04A6  0E3F    		mvi	c,'?'
04A8  CD8F00  		call	conout
04AB  CDB800  		call	conine	;wait for user to type "Y" to
04AE  FE59    		cpi	'Y'	;indicate that we should jump.
04B0  C0      		rnz		;abort if response was not "Y"
04B1  CDCD08  		call	crlf	; visual feedback
04B4  EB      		xchg
04B5  E9      		pchl		;else jump to address
		
04B6  0D0A496E	inpms:	db	CR,LF,'Input ',TRM
      70757420
      00
04BF          	Icomnd:
04BF  CD5509  		call	getaddr ;get port address, ignore extra MSDs
04C2  DA0901  		jc	error	;error if non-hex character
04C5          		bit	7,b	;test for no entry
04C5  CB78    		DB	0CBH,7*8+b+40H
04C7  C20901  		jnz	error	;error if no address entered
04CA  E5      		push	h	; save port
04CB  CD5509  		call	getaddr	; hex number of inputs to do
04CE  DA0901  		jc	error
04D1          		bit	7,b
04D1  CB78    		DB	0CBH,7*8+b+40H
04D3          		jrz	ic0
04D3  2803    		DB	28H,ic0-$-1
04D5  210100  		lxi	h,1
04D8          	ic0:
04D8  E3      		xthl		; save count
04D9  E5      		push	h	; re-save port
04DA  21B604  		lxi	h,inpms
04DD  CDD708  		call	msgprt
04E0  E1      		pop	h
04E1  E5      		push	h
04E2  7D      		mov	a,l
04E3  CDB308  		call	hexout
04E6  CDC808  		call	space
04E9  0E3D    		mvi	c,'='
04EB  CD8F00  		call	conout
			; "Input XX ="
04EE  C1      		pop	b	; port to BC
04EF  E1      		pop	h	; count to HL (L)
04F0  260D    		mvi	h,16-3
04F2  0600    		mvi	b,0	; safety
04F4  C5      		push	b	; C gets trashed by conout
04F5          	ic1:
04F5  CDC808  		call	space
04F8  C1      		pop	b
04F9  C5      		push	b
04FA          		inp	a
04FA  ED78    		DB	0EDH,a*8+40H
04FC  CDB308  		call	hexout
04FF  2D      		dcr	l	; assume <= 256
0500          		jrz	ic2
0500  280A    		DB	28H,ic2-$-1
0502  25      		dcr	h	; col count
0503          		jrnz	ic1
0503  20F0    		DB	20H,ic1-$-1
0505  CDCD08  		call	crlf
0508  2610    		mvi	h,16
050A          		jr	ic1
050A  18E9    		DB	18H,ic1-$-1
050C          	ic2:
050C  C1      		pop	b	; fix stack
050D  CDCD08  		call	crlf
0510  C9      		ret
		
		; TODO: no feedback?
0511          	Ocomnd:
0511  CD5509  		call	getaddr ;get port address, ignore extra MSDs
0514  DA0901  		jc	error	;error if non-hex character
0517          		bit	7,b	;test for no entry
0517  CB78    		DB	0CBH,7*8+b+40H
0519  C20901  		jnz	error	;error if no address entered
051C  2600    		mvi	h,0	; safety
051E  E5      		push	h	; save port
051F  CD5509  		call	getaddr ;get value, ignore extra MSDs
0522  DA0901  		jc	error	;error if non-hex character
0525          		bit	7,b	;test for no entry
0525  CB78    		DB	0CBH,7*8+b+40H
0527  C20901  		jnz	error	;error if no value entered
052A  CDCD08  		call	crlf
052D          	oc0:		; L has byte to output...
052D  C1      		pop	b	; port
052E  C5      		push	b
052F          		outp	l
052F  ED69    		DB	0EDH,l*8+41H
0531  CD5509  		call	getaddr ;get value, ignore extra MSDs
0534  DA0901  		jc	error	;error if non-hex character
					;NOTE: some output has been sent
0537          		bit	7,b	;test for no entry
0537  CB78    		DB	0CBH,7*8+b+40H
0539          		jrz	oc0	;still more to send
0539  28F2    		DB	28H,oc0-$-1
053B  E1      		pop	h	; discard port
053C  C9      		ret
		
053D  CD4909  	skb:	call	char
0540  C8      		rz		;end of buffer/line before a character was found (ZR)
0541  FE20    		cpi	' '	;skip all leading spaces
0543  C0      		rnz		;if not space, then done (NZ)
0544          		jr	skb	;else if space, loop untill not space
0544  18F7    		DB	18H,skb-$-1
		
0546          	Ncomnd:
0546  CD3D05  		call	skb	; skip blanks
0549  CA0901  		jz	error	; required param
			; this may need refinement
054C  1B      		dcx	d
054D  217005  		lxi	h,kb83
0550  CDEA05  		call	strcmp
0553          		jrz	nkb83
0553  284A    		DB	28H,nkb83-$-1
FFFF          	 if not rom2k
0555  217505  		lxi	h,kb84
0558  CDEA05  		call	strcmp
055B          		jrz	nkb84
055B  2846    		DB	28H,nkb84-$-1
055D  217A05  		lxi	h,crtc
0560  CDEA05  		call	strcmp
0563          		jrz	ncrtc
0563  2848    		DB	28H,ncrtc-$-1
0565  218805  		lxi	h,hdd
0568  CDEA05  		call	strcmp
056B          		jrz	nhdd
056B  2866    		DB	28H,nhdd-$-1
		 endif
056D  C30901  		jmp	error
		
0570  4B423833	kb83:	db	'KB83',TRM
      00
FFFF          	 if not rom2k
0575  4B423834	kb84:	db	'KB84',TRM
      00
057A  43525443	crtc:	db	'CRTC',TRM
      00
057F  43525452	crtr:	db	'CRTR',TRM
      00
0584  56525400	vrt:	db	'VRT',TRM
0588  48444400	hdd:	db	'HDD',TRM
058C  48445244	hdrd:	db	'HDRD',TRM
      00
		 endif
0591  46445244	fdrd:	db	'FDRD',TRM
      00
0596  464C5059	flpy:	db	'FLPY',TRM
      00
059B  4B424400	kbd:	db	'KBD',TRM
		
059F  3E05    	nkb83:	mvi	a,B300
05A1  D30C    		out	kbdbrr	; */83 baud gen for SIO1 ch B
05A3  216700  	nkb84:	lxi	h,sioini
05A6  0E07    		mvi	c,kbdctl
05A8  0609    		mvi	b,siolen
05AA          		outir
05AA  EDB3    		DB	0EDH,0B3H
05AC  C9      		ret
		
FFFF          	 if not rom2k
05AD  21C305  	ncrtc:	lxi	h,crtini
05B0  0E1D    		mvi	c,crtdat	; */84 CRTC 6545 data port
05B2  0610    		mvi	b,16
05B4  AF      		xra	a	; start with reg 00
05B5  0D      	nc0:	dcr	c
05B6          		outp	a	; select reg
05B6  ED79    		DB	0EDH,a*8+41H
05B8  3C      		inr	a	; ++reg
05B9  0C      		inr	c	;
05BA          		outi
05BA  EDA3    		DB	0EDH,0A3H
05BC          		jrnz	nc0
05BC  20F7    		DB	20H,nc0-$-1
05BE  3E1F    		mvi	a,31	; R31 enables CRTC
05C0  D31C    		out	crtctl
05C2  C9      		ret
		
05C3  6A505699	crtini:	db	6ah,50h,56h,99h,19h,0ah,19h,19h,78h,0fh,60h,0fh,00h,00h,00h,00h
      190A1919
      780F600F
      00000000
		
05D3  DB14    	nhdd:	in	sysp84
05D5          		setb	1,a
05D5  CBCF    		DB	0CBH,1*8+a+0C0H
05D7  D314    		out	sysp84	; MR on (if not already)
			; need 50mS... 200000 cycles or 7693 loops
05D9  211027  		lxi	h,10000
05DC  2B      	nh0:	dcx	h	;  6
05DD  7C      		mov	a,h	;  4
05DE  B7      		ora	a	;  4
05DF          		jrnz	nh0	; 12 = 26 cycles
05DF  20FB    		DB	20H,nh0-$-1
05E1  DB14    		in	sysp84
05E3          		res	1,a
05E3  CB8F    		DB	0CBH,1*8+a+80H
05E5  D314    		out	sysp84	; MR off
05E7  C39407  		jmp	thdd1
		 endif
		
		; if match, return DE after last match.
		; if no match, return original DE.
05EA  D5      	strcmp:	push	d
05EB  AF      		xra	a
05EC  BE      	sc0:	cmp	m	; TRM?
05ED          		jrz	sc9	; A = 0
05ED  2808    		DB	28H,sc9-$-1
05EF  1A      		ldax	d
05F0  96      		sub	m
05F1          		jrnz	sc8	; A is NZ
05F1  2008    		DB	20H,sc8-$-1
05F3  23      		inx	h
05F4  13      		inx	d
05F5          		jr	sc0
05F5  18F5    		DB	18H,sc0-$-1
05F7  33      	sc9:	inx	sp	; non-destructive POP
05F8  33      		inx	sp
05F9  AF      		xra	a	; A=0 and ZR
05FA  C9      		ret
05FB  D1      	sc8:	pop	d	; restore orig location
05FC  B7      		ora	a
05FD  C9      		ret
		
05FE          	Tcomnd:
05FE  CD3D05  		call	skb	; skip blanks
0601  CA0901  		jz	error	; required param
			; this may need refinement
0604  1B      		dcx	d
0605  219B05  		lxi	h,kbd
0608  CDEA05  		call	strcmp
060B  CA9206  		jz	tkbd
FFFF          	 if not rom2k
060E  217A05  		lxi	h,crtc
0611  CDEA05  		call	strcmp
0614          		jrz	tcrtc
0614  2839    		DB	28H,tcrtc-$-1
0616  218405  		lxi	h,vrt
0619  CDEA05  		call	strcmp
061C  CACF06  		jz	tvrt
061F  217F05  		lxi	h,crtr
0622  CDEA05  		call	strcmp
0625  CA1107  		jz	tcrtr
0628  218805  		lxi	h,hdd
062B  CDEA05  		call	strcmp
062E  CA5907  		jz	thdd
0631  218C05  		lxi	h,hdrd
0634  CDEA05  		call	strcmp
0637  CAD007  		jz	thdrd
		 endif
063A  219105  		lxi	h,fdrd
063D  CDEA05  		call	strcmp
0640  CAE707  		jz	tfdrd
0643  219605  		lxi	h,flpy
0646  CDEA05  		call	strcmp
0649  CA2008  		jz	tflpy
064C  C30901  		jmp	error
		
FFFF          	 if not rom2k
064F  21B706  	tcrtc:	lxi	h,waitm
0652  CDD708  		call	msgprt
0655  0605    		mvi	b,5	; count
0657  1E80    		mvi	e,80h	; compare
0659  3E1F    	tc5:	mvi	a,31
065B  D31C    		out	crtctl	; select reg
065D  DB1C    	tc0:	in	crtctl
065F  E680    		ani	80h
0661  BB      		cmp	e
0662          		jrz	tc9
0662  2817    		DB	28H,tc9-$-1
0664  DB06    		in	conctl
0666  E601    		ani	00000001b
0668          		jrnz	tc6
0668  2008    		DB	20H,tc6-$-1
066A  7B      		mov	a,e
066B  B7      		ora	a
066C          		jrnz	tc0
066C  20EF    		DB	20H,tc0-$-1
066E  DB1F    		in	crtram	; clear Update
0670          		jr	tc5
0670  18E7    		DB	18H,tc5-$-1
0672  DB04    	tc6:	in	condat
0674  21C206  		lxi	h,abrtm
0677  CDD708  		call	msgprt
067A  C9      		ret
067B  7B      	tc9:	mov	a,e
067C  EE80    		xri	80h
067E  5F      		mov	e,a
067F          		jrnz	tc8
067F  200B    		DB	20H,tc8-$-1
0681  21C806  		lxi	h,updtm
0684  CDD708  		call	msgprt
0687  DB1F    		in	crtram	; clear Update
0689          		djnz	tc5
0689  10CE    		DB	10H,tc5-$-1
068B  C9      		ret
068C  CDC808  	tc8:	call	space
068F          		djnz	tc0
068F  10CC    		DB	10H,tc0-$-1
0691  C9      		ret
		 endif
		
0692  21B706  	tkbd:	lxi	h,waitm
0695  CDD708  		call	msgprt
0698  DB07    	tk0:	in	kbdctl
069A  E601    		ani	00000001b
069C          		jrnz	tk1
069C  200F    		DB	20H,tk1-$-1
069E  DB06    		in	conctl
06A0  E601    		ani	00000001b
06A2          		jrz	tk0
06A2  28F4    		DB	28H,tk0-$-1
06A4  DB04    		in	condat
06A6  21C206  		lxi	h,abrtm
06A9  CDD708  		call	msgprt
06AC  C9      		ret
06AD  DB05    	tk1:	in	kbddat
06AF  CDB308  		call	hexout
06B2  CDC808  		call	space
06B5          		jr	tk0
06B5  18E1    		DB	18H,tk0-$-1
		
06B7  0D0A5761	waitm:	db	CR,LF,'Wait... ',TRM
      69742E2E
      2E2000
06C2  41626F72	abrtm:	db	'Abort',TRM
      7400
FFFF          	 if not rom2k
06C8  55706461	updtm:	db	'Update',TRM
      746500
		
06CF  3E0A    	tvrt:	mvi	a,10	; we don't need many samples
06D1  3202FF  		sta	addr1
06D4  CDCD08  		call	crlf
06D7  DB1C    		in	crtctl
06D9  4F      		mov	c,a
			; TODO: reset Update bit? optionally?
06DA  210000  		lxi	h,0
06DD  110080  		lxi	d,8000h
06E0  DB1C    	tv0:	in	crtctl	; 11
06E2  B9      		cmp	c	;  4
06E3          		jrnz	tv4	;  7
06E3  2008    		DB	20H,tv4-$-1
06E5  23      	tv5:	inx	h	;  6
06E6  7C      		mov	a,h	;  4
06E7  B5      		ora	l	;  4
06E8          		jrnz	tv0	; 12 = 48 = 12uS
06E8  20F6    		DB	20H,tv0-$-1
06EA  C38D08  		jmp	tf6	; final sample and display results
06ED  EB      	tv4:	xchg
06EE  77      		mov	m,a
06EF  23      		inx	h
06F0  73      		mov	m,e
06F1  23      		inx	h
06F2  72      		mov	m,d
06F3  23      		inx	h
06F4  EB      		xchg
06F5  4F      		mov	c,a
06F6  3A02FF  		lda	addr1
06F9  3D      		dcr	a
06FA  3202FF  		sta	addr1
06FD  CA6B08  		jz	tf1
0700          		jr	tv5
0700  18E3    		DB	18H,tv5-$-1
		
0702  50617373	pass:	db	'Passed',TRM
      656400
0709  4661696C	fail:	db	'Failed ',TRM
      65642000
		
0711          	tcrtr:	; test read/write of CRTC cursor register pair
0711  CDCD08  		call	crlf
0714  210000  		lxi	h,0
0717  0E1D    		mvi	c,crtdat
0719  3E0E    	tr0:	mvi	a,14	; R14 = cursor hi
071B  D31C    		out	crtctl
071D          		outp	h
071D  ED61    		DB	0EDH,h*8+41H
071F  3C      		inr	a
0720  D31C    		out	crtctl
0722          		outp	l
0722  ED69    		DB	0EDH,l*8+41H
0724  3D      		dcr	a
0725  D31C    		out	crtctl
0727          		inp	d
0727  ED50    		DB	0EDH,d*8+40H
0729  3C      		inr	a
072A  D31C    		out	crtctl
072C          		inp	e
072C  ED58    		DB	0EDH,e*8+40H
			; now compare HL:DE
072E  7D      		mov	a,l
072F  BB      		cmp	e
0730          		jrnz	tr9
0730  2013    		DB	20H,tr9-$-1
0732  7C      		mov	a,h
0733  BA      		cmp	d
0734          		jrnz	tr9
0734  200F    		DB	20H,tr9-$-1
0736  23      		inx	h
0737  7C      		mov	a,h
0738  E63F    		ani	3fh
073A  67      		mov	h,a
073B  B5      		ora	l
073C          		jrnz	tr0
073C  20DB    		DB	20H,tr0-$-1
073E  210207  		lxi	h,pass
0741  CDD708  		call	msgprt
0744  C9      		ret
0745  D5      	tr9:	push	d
0746  E5      		push	h
0747  210907  		lxi	h,fail
074A  CDD708  		call	msgprt
074D  D1      		pop	d
074E  CDAE08  		call	taddr
0751  CDC808  		call	space
0754  D1      		pop	d
0755  CDAE08  		call	taddr
0758  C9      		ret
		
		; user must have set other registers as needed
0759          	thdd:	; issue command, wait...
0759  3E90    		mvi	a,90h
075B  3200FF  		sta	addr0	; default: self test
075E  AF      		xra	a
075F  3202FF  		sta	addr1	; default: 256 samples
0762  CD5509  		call	getaddr ;get optional command
0765  DA0901  		jc	error	;error if non-hex character
0768          		bit	7,b	;test for no entry
0768  CB78    		DB	0CBH,7*8+b+40H
076A          		jrnz	thY
076A  201B    		DB	20H,thY-$-1
076C  7C      		mov	a,h
076D  B7      		ora	a
076E  C20901  		jnz	error
0771  2200FF  		shld	addr0	;save command
0774  CD5509  		call	getaddr ;get sample count
0777  DA0901  		jc	error	;error if non-hex character
077A          		bit	7,b	;test for no entry
077A  CB78    		DB	0CBH,7*8+b+40H
077C  C28707  		jnz	thY
077F  7C      		mov	a,h
0780  B7      		ora	a
0781  C20901  		jnz	error
0784  2202FF  		shld	addr1	;save count
0787  CDCD08  	thY:	call	crlf
078A  DB87    		in	hddcmd
078C  4F      		mov	c,a
078D  3A00FF  		lda	addr0
0790  D387    		out	hddcmd
0792          		jr	thX
0792  1807    		DB	18H,thX-$-1
0794          	thdd1:	; RESET already issued
0794  CDCD08  		call	crlf
0797  DB87    		in	hddcmd
0799  0E00    		mvi	c,0
079B  210000  	thX:	lxi	h,0
079E  110080  		lxi	d,8000h
07A1  DB87    	th0:	in	hddcmd
07A3  B9      		cmp	c
07A4          		jrnz	th4
07A4  2016    		DB	20H,th4-$-1
07A6  23      	th5:	inx	h
07A7  7C      		mov	a,h
07A8  B5      		ora	l
07A9          		jrnz	th0
07A9  20F6    		DB	20H,th0-$-1
07AB          		jr	th6	; final sample and display results
07AB  1808    		DB	18H,th6-$-1
07AD  CD6B08  	th1:	call	tf1	; dump results from 8000h..DE
07B0  DB81    		in	hdderr	; also print final error status
07B2  C3B308  		jmp	hexout
		; force final sample
07B5  2B      	th6:	dcx	h	; show as FFFF
07B6  3E01    		mvi	a,1
07B8  3202FF  		sta	addr1	; last sample
07BB  79      		mov	a,c	; last register value
07BC  EB      	th4:	xchg
07BD  77      		mov	m,a
07BE  23      		inx	h
07BF  73      		mov	m,e
07C0  23      		inx	h
07C1  72      		mov	m,d
07C2  23      		inx	h
07C3  EB      		xchg
07C4  4F      		mov	c,a
07C5  3A02FF  		lda	addr1
07C8  3D      		dcr	a
07C9  3202FF  		sta	addr1
07CC          		jrz	th1
07CC  28DF    		DB	28H,th1-$-1
07CE          		jr	th5
07CE  18D6    		DB	18H,th5-$-1
		
		; user setup registers and issue READ command
07D0  CDCD08  	thdrd:	call	crlf
07D3  210080  		lxi	h,8000h
07D6  018000  		lxi	b,hdddat	; B=0 (256)
07D9  DB87    		in	hddcmd
07DB  E608    		ani	00001000b	; DRQ
07DD          		jrz	thr9
07DD  2804    		DB	28H,thr9-$-1
07DF          		inir
07DF  EDB2    		DB	0EDH,0B2H
07E1          		inir
07E1  EDB2    		DB	0EDH,0B2H
07E3  EB      	thr9:	xchg
07E4  C3AE08  		jmp	taddr
		 endif
		
		; read a sector from the floppy.
		; user must turn on motors, select drive,
		; set side, set DDEN, and step to track.
		; data stored in 8000h
07E7  AF      	tfdrd:	xra	a
07E8  3200FF  		sta	addr0
07EB  CD5509  		call	getaddr ;get optional sector
07EE  DA0901  		jc	error	;error if non-hex character
07F1          		bit	7,b	;test for no entry
07F1  CB78    		DB	0CBH,7*8+b+40H
07F3          		jrnz	tfrX
07F3  2008    		DB	20H,tfrX-$-1
07F5  7C      		mov	a,h
07F6  B7      		ora	a
07F7  C20901  		jnz	error
07FA  2200FF  		shld	addr0	; allow some rediculous values
07FD          	tfrX:			; (also, side 1 uses: 0A..13)
07FD  CDCD08  		call	crlf
0800  3A00FF  		lda	addr0
0803  D312    		out	fpysec
0805  210080  		lxi	h,8000h
0808  011300  		lxi	b,fpydat	; B=0
080B  3E88    		mvi	a,88h	; read sector, side compare(?)
080D  D310    		out	fpycmd
080F  76      	tfr0:	hlt
0810          		ini
0810  EDA2    		DB	0EDH,0A2H
0812          		jrnz	tfr0
0812  20FB    		DB	20H,tfr0-$-1
0814  76      	tfr1:	hlt
0815          		ini
0815  EDA2    		DB	0EDH,0A2H
0817          		jrnz	tfr1
0817  20FB    		DB	20H,tfr1-$-1
0819  76      		hlt	; wait for done
081A  DB10    		in	fpysts
081C  CDB308  		call	hexout
081F  C9      		ret
		
0820          	tflpy:	; user must motor on and select drive (and side)
0820  3ED0    		mvi	a,0d0h
0822  3200FF  		sta	addr0	; default: force intr
0825  AF      		xra	a
0826  3202FF  		sta	addr1	; default: 256 samples
0829  CD5509  		call	getaddr ;get optional command
082C  DA0901  		jc	error	;error if non-hex character
082F          		bit	7,b	;test for no entry
082F  CB78    		DB	0CBH,7*8+b+40H
0831          		jrnz	tfX
0831  201B    		DB	20H,tfX-$-1
0833  7C      		mov	a,h
0834  B7      		ora	a
0835  C20901  		jnz	error
0838  2200FF  		shld	addr0	;save command
083B  CD5509  		call	getaddr ;get sample count
083E  DA0901  		jc	error	;error if non-hex character
0841          		bit	7,b	;test for no entry
0841  CB78    		DB	0CBH,7*8+b+40H
0843  C24E08  		jnz	tfX
0846  7C      		mov	a,h
0847  B7      		ora	a
0848  C20901  		jnz	error
084B  2202FF  		shld	addr1	;save count
084E          	tfX:
084E  CDCD08  		call	crlf
0851  DB10    		in	fpysts
0853  4F      		mov	c,a
0854  3A00FF  		lda	addr0	; FDC command
0857  D310    		out	fpycmd
0859  210000  		lxi	h,0
085C  110080  		lxi	d,8000h
		
085F  DB10    	tf0:	in	fpysts	; 11
0861  B9      		cmp	c	;  4
0862          		jrnz	tf4	;  7
0862  2030    		DB	20H,tf4-$-1
0864  23      	tf5:	inx	h	;  6
0865  7C      		mov	a,h	;  4
0866  B5      		ora	l	;  4
0867          		jrnz	tf0	; 12 = 48 = 12uS
0867  20F6    		DB	20H,tf0-$-1
			; force final entry...
0869          		jr	tf6
0869  1822    		DB	18H,tf6-$-1
		
			; dump 8000h..DE and return
086B  210080  	tf1:	lxi	h,8000h
086E          	tf2:
086E  7C      		mov	a,h
086F  BA      		cmp	d
0870          		jrnz	tf3
0870  2003    		DB	20H,tf3-$-1
0872  7D      		mov	a,l
0873  BB      		cmp	e
0874  C8      		rz	; user must motor off...
0875          	tf3:
0875  7E      		mov	a,m
0876  23      		inx	h
0877  CDB308  		call	hexout
087A  CDC808  		call	space
087D  46      		mov	b,m
087E  23      		inx	h
087F  7E      		mov	a,m
0880  23      		inx	h
0881  CDB308  		call	hexout
0884  78      		mov	a,b
0885  CDB308  		call	hexout
0888  CDCD08  		call	crlf
088B          		jr	tf2
088B  18E1    		DB	18H,tf2-$-1
		
		; force last sample. works for all tests - can't escape to tf5
088D  2B      	tf6:	dcx	h	; show as FFFF
088E  3E01    		mvi	a,1
0890  3202FF  		sta	addr1	; last sample
0893  79      		mov	a,c	; last register value
		; save sample, check for done.
0894  EB      	tf4:	xchg
0895  77      		mov	m,a
0896  23      		inx	h
0897  73      		mov	m,e
0898  23      		inx	h
0899  72      		mov	m,d
089A  23      		inx	h
089B  EB      		xchg
089C  4F      		mov	c,a
089D  3A02FF  		lda	addr1
08A0  3D      		dcr	a
08A1  3202FF  		sta	addr1
08A4          		jrz	tf1
08A4  28C5    		DB	28H,tf1-$-1
08A6          		jr	tf5
08A6  18BC    		DB	18H,tf5-$-1
		
08A8          	Vcomnd:
08A8  21C500  		lxi	h,signon
08AB  C3D708  		jmp	msgprt
		
		*********************************************************
		**  Utility subroutines
		*********************************************************
		
08AE  7A      	taddr:	mov	a,d	;display (DE) at console in HEX
08AF  CDB308  		call	hexout	;print HI byte in HEX
08B2  7B      		mov	a,e	;now do LO byte
08B3  F5      	hexout:	push	psw	;output (A) to console in HEX
08B4  07      		rlc		;get HI digit in usable (LO) position
08B5  07      		rlc
08B6  07      		rlc
08B7  07      		rlc
08B8  CDBC08  		call	nible	;and display it
08BB  F1      		pop	psw	;get LO digit back and display it
08BC  E60F    	nible:	ani	00001111b	;display LO 4 bits of (A) in HEX
08BE  C690    		adi	90h	;algorithm to convert 4-bits to ASCII
08C0  27      		daa
08C1  CE40    		aci	40h
08C3  27      		daa
08C4  4F      		mov	c,a	;display ASCII digit
08C5  C38F00  		jmp	conout
		
08C8  0E20    	space:	mvi	c,' '	;send an ASCII blank to console
08CA  C38F00  		jmp	conout
		
08CD  0E0D    	crlf:	mvi	c,CR	;send Carriage-Return/Line-Feed to console
08CF  CD8F00  		call	conout
08D2  0E0A    		mvi	c,LF
08D4  C38F00  		jmp	conout
		
08D7  7E      	msgprt:	mov	a,m	;send string to console, terminated by 00
08D8  B7      		ora	a
08D9  C8      		rz
08DA  4F      		mov	c,a
08DB  CD8F00  		call	conout
08DE  23      		inx	h
08DF          		jr	msgprt
08DF  18F6    		DB	18H,msgprt-$-1
		
08E1  7E      	print:	mov	a,m	; BDOS func 9 style msgprt
08E2  FE24    		cpi	'$'
08E4  C8      		rz
08E5  4F      		mov	c,a
08E6  CD8F00  		call	conout
08E9  23      		inx	h
08EA          		jr	print
08EA  18F5    		DB	18H,print-$-1
		
08EC  E5      	check:	push	h	;non-destuctive compare HL:DE
08ED  B7      		ora	a
08EE          		dsbc	d
08EE  ED52    		DB	0EDH,d*8+42H
08F0  E1      		pop	h
08F1  C9      		ret
		
		; Convert letters to upper-case
08F2          	toupper:
08F2  FE61    		cpi	'a'
08F4  D8      		rc
08F5  FE7B    		cpi	'z'+1
08F7  D0      		rnc
08F8  E65F    		ani	01011111b
08FA  C9      		ret
		
		; Read a line of text into 'line'
		; End with CR, honor BS
		; Reject all non-printing characters, force toupper
08FB  2104FF  	linein:	lxi	h,line	;get string of characters from console, ending in CR
08FE  CD9E00  	li0:	call	conin	;get a character
0901  FE08    		cpi	BS	;allow BackSpacing
0903          		jrz	backup
0903  281D    		DB	28H,backup-$-1
0905  FE0D    		cpi	CR
0907          		jrz	li1
0907  282E    		DB	28H,li1-$-1
0909  FE03    		cpi	CTLC
090B          		jrz	liZ
090B  2830    		DB	28H,liZ-$-1
090D  FE20    		cpi	' '	;ignore other non-print
090F          		jrc	li0
090F  38ED    		DB	38H,li0-$-1
0911  CDF208  		call	toupper
0914  77      		mov	m,a	;put character in line nuffer
0915  23      		inx	h
0916  4F      		mov	c,a
0917  CD8F00  		call	conout	; echo character
091A  7D      		mov	a,l	;else check for pending buffer overflow
091B  D604    		sui	line mod 256
091D  FE40    		cpi	64
091F  C8      		rz		;stop if buffer full
0920          		jr	li0	;if not full, keep getting characters
0920  18DC    		DB	18H,li0-$-1
		
0922  7D      	backup:	mov	a,l	;(destructive) BackSpacing
0923  FE04    		cpi	line mod 256	;test if at beginning of line
0925          		jrz	li0	;can't backspace past start of line
0925  28D7    		DB	28H,li0-$-1
0927  0E08    		mvi	c,bs	;output BS," ",BS to erase character on screen
0929  CD8F00  		call	conout	;and put cursor back one position
092C  CDC808  		call	space
092F  0E08    		mvi	c,bs
0931  CD8F00  		call	conout
0934  2B      		dcx	h	;step buffer pointer back one
0935          		jr	li0	;and continue to get characters
0935  18C7    		DB	18H,li0-$-1
		
		; End line input, A=CR
0937  77      	li1:	mov	m,a	; store CR in buffer
0938  0E0D    		mvi	c,CR	;display CR so user knows we got it
093A  C38F00  		jmp	conout	;then return to calling routine
		
		; Abort input
093D  0E5E    	liZ:	mvi	c,'^'
093F  CD8F00  		call	conout
0942  0E43    		mvi	c,'C'
0944  CD8F00  		call	conout
0947  E1      		pop	h	; always OK?
0948  C9      		ret		; return to caller's caller (main debug loop)
		
		; Get next character from line buffer.
		; DE=current pointer within 'line'
		; Returns: ZR=EOL else A=char
0949  7B      	char:	mov	a,e	;remove a character from line buffer,
094A  D604    		sui	line mod 256	;testing for no more characters
094C  D640    		sui	64
094E  C8      		rz		;return [ZR] condition if at end of buffer
094F  1A      		ldax	d
0950  FE0D    		cpi	CR
0952  C8      		rz		;also return [ZR] if at end of line
0953  13      		inx	d	;else step to next character
0954  C9      		ret		;and return [NZ]
		
		; Get HEX value from line buffer
		; Return: CY=error, HL=value, bit7(B)=1 if no input
0955          	getaddr:		;extract address from line buffer (delimitted by " ")
0955          		setb	7,b	;flag to detect no address entered
0955  CBF8    		DB	0CBH,7*8+b+0C0H
0957  210000  		lxi	h,0
095A  CD3D05  		call	skb
095D  C8      		rz		;end of buffer/line before a character was found
095E          		jr	ga1	;if not space, then start getting HEX digits
095E  1804    		DB	18H,ga1-$-1
		
0960  CD4909  	ga0:	call	char
0963  C8      		rz
0964  CD7C09  	ga1:	call	hexcon	;start assembling digits into 16 bit accumilator
0967          		jrc	chkdlm	;check if valid delimiter before returning error.
0967  380E    		DB	38H,chkdlm-$-1
0969          		res	7,b	;reset flag
0969  CBB8    		DB	0CBH,7*8+b+80H
096B  D5      		push	d	;save buffer pointer
096C  5F      		mov	e,a
096D  1600    		mvi	d,0
096F  29      		dad	h	;shift "accumulator" left 1 digit
0970  29      		dad	h
0971  29      		dad	h
0972  29      		dad	h
0973  19      		dad	d	;add in new digit
0974  D1      		pop	d	;restore buffer pointer
0975          		jr	ga0	;loop for next digit
0975  18E9    		DB	18H,ga0-$-1
		
0977  FE20    	chkdlm: cpi	' '	;blank is currently the only valid delimiter
0979  C8      		rz
097A  37      		stc
097B  C9      		ret
		
097C          	hexcon: 		;convert ASCII character to HEX digit
097C  FE30    		cpi	'0'	;must be .GE. "0"
097E  D8      		rc
097F  FE3A    		cpi	'9'+1	;and be .LE. "9"
0981          		jrc	ok0	;valid numeral.
0981  3809    		DB	38H,ok0-$-1
0983  FE41    		cpi	'A'	;or .GE. "A"
0985  D8      		rc
0986  FE47    		cpi	'F'+1	;and .LE. "F"
0988  3F      		cmc
0989  D8      		rc		;return [CY] if not valid HEX digit
098A  D607    		sui	'A'-'9'-1	;convert letter
098C  D630    	ok0:	sui	'0'	;convert (numeral) to 0-15 in (A)
098E  C9      		ret
		
		; These only work on */84 (and 10) models.
		; Have no effect (and does nothing) on */83 models.
098F          	proginit:
098F  AF      		xra	a
0990          		stai
0990  ED47    		DB	0EDH,47H
FFFF          	 if not rom2k
0992  DB14    		in	sysp84
0994  E6FC    		ani	not DSNONE
0996  E6EF    		ani	not K84MTR
0998  F602    		ori	DS0
099A  D314    		out	sysp84
		 endif
099C  3E41    		mvi	a,'A'
099E  320030  		sta	3000h
09A1  C9      		ret
		
09A2          	progoff:
09A2          		ldai
09A2  ED57    		DB	0EDH,57H
09A4  C0      		rnz
09A5  2F      		cma
09A6          		stai
09A6  ED47    		DB	0EDH,47H
FFFF          	 if not rom2k
09A8  DB14    		in	sysp84
09AA  F603    		ori	DSNONE
09AC  D314    		out	sysp84
		 endif
09AE  AF      		xra	a
09AF  320030  		sta	3000h
09B2  C9      		ret
		
09B3          	progress:
09B3          		ldai
09B3  ED57    		DB	0EDH,57H
09B5  C0      		rnz
FFFF          	 if not rom2k
09B6  DB14    		in	sysp84
09B8  EE03    		xri	DSNONE
09BA  D314    		out	sysp84
		 endif
09BC  3A0030  		lda	3000h
09BF  EE03    		xri	00000011b
09C1  320030  		sta	3000h
09C4  C9      		ret
		
			rept	romsiz-$
09C5  FF      		db	0ffh
09C6  FF      		db	0ffh
09C7  FF      		db	0ffh
09C8  FF      		db	0ffh
09C9  FF      		db	0ffh
09CA  FF      		db	0ffh
09CB  FF      		db	0ffh
09CC  FF      		db	0ffh
09CD  FF      		db	0ffh
09CE  FF      		db	0ffh
09CF  FF      		db	0ffh
09D0  FF      		db	0ffh
09D1  FF      		db	0ffh
09D2  FF      		db	0ffh
09D3  FF      		db	0ffh
09D4  FF      		db	0ffh
09D5  FF      		db	0ffh
09D6  FF      		db	0ffh
09D7  FF      		db	0ffh
09D8  FF      		db	0ffh
09D9  FF      		db	0ffh
09DA  FF      		db	0ffh
09DB  FF      		db	0ffh
09DC  FF      		db	0ffh
09DD  FF      		db	0ffh
09DE  FF      		db	0ffh
09DF  FF      		db	0ffh
09E0  FF      		db	0ffh
09E1  FF      		db	0ffh
09E2  FF      		db	0ffh
09E3  FF      		db	0ffh
09E4  FF      		db	0ffh
09E5  FF      		db	0ffh
09E6  FF      		db	0ffh
09E7  FF      		db	0ffh
09E8  FF      		db	0ffh
09E9  FF      		db	0ffh
09EA  FF      		db	0ffh
09EB  FF      		db	0ffh
09EC  FF      		db	0ffh
09ED  FF      		db	0ffh
09EE  FF      		db	0ffh
09EF  FF      		db	0ffh
09F0  FF      		db	0ffh
09F1  FF      		db	0ffh
09F2  FF      		db	0ffh
09F3  FF      		db	0ffh
09F4  FF      		db	0ffh
09F5  FF      		db	0ffh
09F6  FF      		db	0ffh
09F7  FF      		db	0ffh
09F8  FF      		db	0ffh
09F9  FF      		db	0ffh
09FA  FF      		db	0ffh
09FB  FF      		db	0ffh
09FC  FF      		db	0ffh
09FD  FF      		db	0ffh
09FE  FF      		db	0ffh
09FF  FF      		db	0ffh
0A00  FF      		db	0ffh
0A01  FF      		db	0ffh
0A02  FF      		db	0ffh
0A03  FF      		db	0ffh
0A04  FF      		db	0ffh
0A05  FF      		db	0ffh
0A06  FF      		db	0ffh
0A07  FF      		db	0ffh
0A08  FF      		db	0ffh
0A09  FF      		db	0ffh
0A0A  FF      		db	0ffh
0A0B  FF      		db	0ffh
0A0C  FF      		db	0ffh
0A0D  FF      		db	0ffh
0A0E  FF      		db	0ffh
0A0F  FF      		db	0ffh
0A10  FF      		db	0ffh
0A11  FF      		db	0ffh
0A12  FF      		db	0ffh
0A13  FF      		db	0ffh
0A14  FF      		db	0ffh
0A15  FF      		db	0ffh
0A16  FF      		db	0ffh
0A17  FF      		db	0ffh
0A18  FF      		db	0ffh
0A19  FF      		db	0ffh
0A1A  FF      		db	0ffh
0A1B  FF      		db	0ffh
0A1C  FF      		db	0ffh
0A1D  FF      		db	0ffh
0A1E  FF      		db	0ffh
0A1F  FF      		db	0ffh
0A20  FF      		db	0ffh
0A21  FF      		db	0ffh
0A22  FF      		db	0ffh
0A23  FF      		db	0ffh
0A24  FF      		db	0ffh
0A25  FF      		db	0ffh
0A26  FF      		db	0ffh
0A27  FF      		db	0ffh
0A28  FF      		db	0ffh
0A29  FF      		db	0ffh
0A2A  FF      		db	0ffh
0A2B  FF      		db	0ffh
0A2C  FF      		db	0ffh
0A2D  FF      		db	0ffh
0A2E  FF      		db	0ffh
0A2F  FF      		db	0ffh
0A30  FF      		db	0ffh
0A31  FF      		db	0ffh
0A32  FF      		db	0ffh
0A33  FF      		db	0ffh
0A34  FF      		db	0ffh
0A35  FF      		db	0ffh
0A36  FF      		db	0ffh
0A37  FF      		db	0ffh
0A38  FF      		db	0ffh
0A39  FF      		db	0ffh
0A3A  FF      		db	0ffh
0A3B  FF      		db	0ffh
0A3C  FF      		db	0ffh
0A3D  FF      		db	0ffh
0A3E  FF      		db	0ffh
0A3F  FF      		db	0ffh
0A40  FF      		db	0ffh
0A41  FF      		db	0ffh
0A42  FF      		db	0ffh
0A43  FF      		db	0ffh
0A44  FF      		db	0ffh
0A45  FF      		db	0ffh
0A46  FF      		db	0ffh
0A47  FF      		db	0ffh
0A48  FF      		db	0ffh
0A49  FF      		db	0ffh
0A4A  FF      		db	0ffh
0A4B  FF      		db	0ffh
0A4C  FF      		db	0ffh
0A4D  FF      		db	0ffh
0A4E  FF      		db	0ffh
0A4F  FF      		db	0ffh
0A50  FF      		db	0ffh
0A51  FF      		db	0ffh
0A52  FF      		db	0ffh
0A53  FF      		db	0ffh
0A54  FF      		db	0ffh
0A55  FF      		db	0ffh
0A56  FF      		db	0ffh
0A57  FF      		db	0ffh
0A58  FF      		db	0ffh
0A59  FF      		db	0ffh
0A5A  FF      		db	0ffh
0A5B  FF      		db	0ffh
0A5C  FF      		db	0ffh
0A5D  FF      		db	0ffh
0A5E  FF      		db	0ffh
0A5F  FF      		db	0ffh
0A60  FF      		db	0ffh
0A61  FF      		db	0ffh
0A62  FF      		db	0ffh
0A63  FF      		db	0ffh
0A64  FF      		db	0ffh
0A65  FF      		db	0ffh
0A66  FF      		db	0ffh
0A67  FF      		db	0ffh
0A68  FF      		db	0ffh
0A69  FF      		db	0ffh
0A6A  FF      		db	0ffh
0A6B  FF      		db	0ffh
0A6C  FF      		db	0ffh
0A6D  FF      		db	0ffh
0A6E  FF      		db	0ffh
0A6F  FF      		db	0ffh
0A70  FF      		db	0ffh
0A71  FF      		db	0ffh
0A72  FF      		db	0ffh
0A73  FF      		db	0ffh
0A74  FF      		db	0ffh
0A75  FF      		db	0ffh
0A76  FF      		db	0ffh
0A77  FF      		db	0ffh
0A78  FF      		db	0ffh
0A79  FF      		db	0ffh
0A7A  FF      		db	0ffh
0A7B  FF      		db	0ffh
0A7C  FF      		db	0ffh
0A7D  FF      		db	0ffh
0A7E  FF      		db	0ffh
0A7F  FF      		db	0ffh
0A80  FF      		db	0ffh
0A81  FF      		db	0ffh
0A82  FF      		db	0ffh
0A83  FF      		db	0ffh
0A84  FF      		db	0ffh
0A85  FF      		db	0ffh
0A86  FF      		db	0ffh
0A87  FF      		db	0ffh
0A88  FF      		db	0ffh
0A89  FF      		db	0ffh
0A8A  FF      		db	0ffh
0A8B  FF      		db	0ffh
0A8C  FF      		db	0ffh
0A8D  FF      		db	0ffh
0A8E  FF      		db	0ffh
0A8F  FF      		db	0ffh
0A90  FF      		db	0ffh
0A91  FF      		db	0ffh
0A92  FF      		db	0ffh
0A93  FF      		db	0ffh
0A94  FF      		db	0ffh
0A95  FF      		db	0ffh
0A96  FF      		db	0ffh
0A97  FF      		db	0ffh
0A98  FF      		db	0ffh
0A99  FF      		db	0ffh
0A9A  FF      		db	0ffh
0A9B  FF      		db	0ffh
0A9C  FF      		db	0ffh
0A9D  FF      		db	0ffh
0A9E  FF      		db	0ffh
0A9F  FF      		db	0ffh
0AA0  FF      		db	0ffh
0AA1  FF      		db	0ffh
0AA2  FF      		db	0ffh
0AA3  FF      		db	0ffh
0AA4  FF      		db	0ffh
0AA5  FF      		db	0ffh
0AA6  FF      		db	0ffh
0AA7  FF      		db	0ffh
0AA8  FF      		db	0ffh
0AA9  FF      		db	0ffh
0AAA  FF      		db	0ffh
0AAB  FF      		db	0ffh
0AAC  FF      		db	0ffh
0AAD  FF      		db	0ffh
0AAE  FF      		db	0ffh
0AAF  FF      		db	0ffh
0AB0  FF      		db	0ffh
0AB1  FF      		db	0ffh
0AB2  FF      		db	0ffh
0AB3  FF      		db	0ffh
0AB4  FF      		db	0ffh
0AB5  FF      		db	0ffh
0AB6  FF      		db	0ffh
0AB7  FF      		db	0ffh
0AB8  FF      		db	0ffh
0AB9  FF      		db	0ffh
0ABA  FF      		db	0ffh
0ABB  FF      		db	0ffh
0ABC  FF      		db	0ffh
0ABD  FF      		db	0ffh
0ABE  FF      		db	0ffh
0ABF  FF      		db	0ffh
0AC0  FF      		db	0ffh
0AC1  FF      		db	0ffh
0AC2  FF      		db	0ffh
0AC3  FF      		db	0ffh
0AC4  FF      		db	0ffh
0AC5  FF      		db	0ffh
0AC6  FF      		db	0ffh
0AC7  FF      		db	0ffh
0AC8  FF      		db	0ffh
0AC9  FF      		db	0ffh
0ACA  FF      		db	0ffh
0ACB  FF      		db	0ffh
0ACC  FF      		db	0ffh
0ACD  FF      		db	0ffh
0ACE  FF      		db	0ffh
0ACF  FF      		db	0ffh
0AD0  FF      		db	0ffh
0AD1  FF      		db	0ffh
0AD2  FF      		db	0ffh
0AD3  FF      		db	0ffh
0AD4  FF      		db	0ffh
0AD5  FF      		db	0ffh
0AD6  FF      		db	0ffh
0AD7  FF      		db	0ffh
0AD8  FF      		db	0ffh
0AD9  FF      		db	0ffh
0ADA  FF      		db	0ffh
0ADB  FF      		db	0ffh
0ADC  FF      		db	0ffh
0ADD  FF      		db	0ffh
0ADE  FF      		db	0ffh
0ADF  FF      		db	0ffh
0AE0  FF      		db	0ffh
0AE1  FF      		db	0ffh
0AE2  FF      		db	0ffh
0AE3  FF      		db	0ffh
0AE4  FF      		db	0ffh
0AE5  FF      		db	0ffh
0AE6  FF      		db	0ffh
0AE7  FF      		db	0ffh
0AE8  FF      		db	0ffh
0AE9  FF      		db	0ffh
0AEA  FF      		db	0ffh
0AEB  FF      		db	0ffh
0AEC  FF      		db	0ffh
0AED  FF      		db	0ffh
0AEE  FF      		db	0ffh
0AEF  FF      		db	0ffh
0AF0  FF      		db	0ffh
0AF1  FF      		db	0ffh
0AF2  FF      		db	0ffh
0AF3  FF      		db	0ffh
0AF4  FF      		db	0ffh
0AF5  FF      		db	0ffh
0AF6  FF      		db	0ffh
0AF7  FF      		db	0ffh
0AF8  FF      		db	0ffh
0AF9  FF      		db	0ffh
0AFA  FF      		db	0ffh
0AFB  FF      		db	0ffh
0AFC  FF      		db	0ffh
0AFD  FF      		db	0ffh
0AFE  FF      		db	0ffh
0AFF  FF      		db	0ffh
0B00  FF      		db	0ffh
0B01  FF      		db	0ffh
0B02  FF      		db	0ffh
0B03  FF      		db	0ffh
0B04  FF      		db	0ffh
0B05  FF      		db	0ffh
0B06  FF      		db	0ffh
0B07  FF      		db	0ffh
0B08  FF      		db	0ffh
0B09  FF      		db	0ffh
0B0A  FF      		db	0ffh
0B0B  FF      		db	0ffh
0B0C  FF      		db	0ffh
0B0D  FF      		db	0ffh
0B0E  FF      		db	0ffh
0B0F  FF      		db	0ffh
0B10  FF      		db	0ffh
0B11  FF      		db	0ffh
0B12  FF      		db	0ffh
0B13  FF      		db	0ffh
0B14  FF      		db	0ffh
0B15  FF      		db	0ffh
0B16  FF      		db	0ffh
0B17  FF      		db	0ffh
0B18  FF      		db	0ffh
0B19  FF      		db	0ffh
0B1A  FF      		db	0ffh
0B1B  FF      		db	0ffh
0B1C  FF      		db	0ffh
0B1D  FF      		db	0ffh
0B1E  FF      		db	0ffh
0B1F  FF      		db	0ffh
0B20  FF      		db	0ffh
0B21  FF      		db	0ffh
0B22  FF      		db	0ffh
0B23  FF      		db	0ffh
0B24  FF      		db	0ffh
0B25  FF      		db	0ffh
0B26  FF      		db	0ffh
0B27  FF      		db	0ffh
0B28  FF      		db	0ffh
0B29  FF      		db	0ffh
0B2A  FF      		db	0ffh
0B2B  FF      		db	0ffh
0B2C  FF      		db	0ffh
0B2D  FF      		db	0ffh
0B2E  FF      		db	0ffh
0B2F  FF      		db	0ffh
0B30  FF      		db	0ffh
0B31  FF      		db	0ffh
0B32  FF      		db	0ffh
0B33  FF      		db	0ffh
0B34  FF      		db	0ffh
0B35  FF      		db	0ffh
0B36  FF      		db	0ffh
0B37  FF      		db	0ffh
0B38  FF      		db	0ffh
0B39  FF      		db	0ffh
0B3A  FF      		db	0ffh
0B3B  FF      		db	0ffh
0B3C  FF      		db	0ffh
0B3D  FF      		db	0ffh
0B3E  FF      		db	0ffh
0B3F  FF      		db	0ffh
0B40  FF      		db	0ffh
0B41  FF      		db	0ffh
0B42  FF      		db	0ffh
0B43  FF      		db	0ffh
0B44  FF      		db	0ffh
0B45  FF      		db	0ffh
0B46  FF      		db	0ffh
0B47  FF      		db	0ffh
0B48  FF      		db	0ffh
0B49  FF      		db	0ffh
0B4A  FF      		db	0ffh
0B4B  FF      		db	0ffh
0B4C  FF      		db	0ffh
0B4D  FF      		db	0ffh
0B4E  FF      		db	0ffh
0B4F  FF      		db	0ffh
0B50  FF      		db	0ffh
0B51  FF      		db	0ffh
0B52  FF      		db	0ffh
0B53  FF      		db	0ffh
0B54  FF      		db	0ffh
0B55  FF      		db	0ffh
0B56  FF      		db	0ffh
0B57  FF      		db	0ffh
0B58  FF      		db	0ffh
0B59  FF      		db	0ffh
0B5A  FF      		db	0ffh
0B5B  FF      		db	0ffh
0B5C  FF      		db	0ffh
0B5D  FF      		db	0ffh
0B5E  FF      		db	0ffh
0B5F  FF      		db	0ffh
0B60  FF      		db	0ffh
0B61  FF      		db	0ffh
0B62  FF      		db	0ffh
0B63  FF      		db	0ffh
0B64  FF      		db	0ffh
0B65  FF      		db	0ffh
0B66  FF      		db	0ffh
0B67  FF      		db	0ffh
0B68  FF      		db	0ffh
0B69  FF      		db	0ffh
0B6A  FF      		db	0ffh
0B6B  FF      		db	0ffh
0B6C  FF      		db	0ffh
0B6D  FF      		db	0ffh
0B6E  FF      		db	0ffh
0B6F  FF      		db	0ffh
0B70  FF      		db	0ffh
0B71  FF      		db	0ffh
0B72  FF      		db	0ffh
0B73  FF      		db	0ffh
0B74  FF      		db	0ffh
0B75  FF      		db	0ffh
0B76  FF      		db	0ffh
0B77  FF      		db	0ffh
0B78  FF      		db	0ffh
0B79  FF      		db	0ffh
0B7A  FF      		db	0ffh
0B7B  FF      		db	0ffh
0B7C  FF      		db	0ffh
0B7D  FF      		db	0ffh
0B7E  FF      		db	0ffh
0B7F  FF      		db	0ffh
0B80  FF      		db	0ffh
0B81  FF      		db	0ffh
0B82  FF      		db	0ffh
0B83  FF      		db	0ffh
0B84  FF      		db	0ffh
0B85  FF      		db	0ffh
0B86  FF      		db	0ffh
0B87  FF      		db	0ffh
0B88  FF      		db	0ffh
0B89  FF      		db	0ffh
0B8A  FF      		db	0ffh
0B8B  FF      		db	0ffh
0B8C  FF      		db	0ffh
0B8D  FF      		db	0ffh
0B8E  FF      		db	0ffh
0B8F  FF      		db	0ffh
0B90  FF      		db	0ffh
0B91  FF      		db	0ffh
0B92  FF      		db	0ffh
0B93  FF      		db	0ffh
0B94  FF      		db	0ffh
0B95  FF      		db	0ffh
0B96  FF      		db	0ffh
0B97  FF      		db	0ffh
0B98  FF      		db	0ffh
0B99  FF      		db	0ffh
0B9A  FF      		db	0ffh
0B9B  FF      		db	0ffh
0B9C  FF      		db	0ffh
0B9D  FF      		db	0ffh
0B9E  FF      		db	0ffh
0B9F  FF      		db	0ffh
0BA0  FF      		db	0ffh
0BA1  FF      		db	0ffh
0BA2  FF      		db	0ffh
0BA3  FF      		db	0ffh
0BA4  FF      		db	0ffh
0BA5  FF      		db	0ffh
0BA6  FF      		db	0ffh
0BA7  FF      		db	0ffh
0BA8  FF      		db	0ffh
0BA9  FF      		db	0ffh
0BAA  FF      		db	0ffh
0BAB  FF      		db	0ffh
0BAC  FF      		db	0ffh
0BAD  FF      		db	0ffh
0BAE  FF      		db	0ffh
0BAF  FF      		db	0ffh
0BB0  FF      		db	0ffh
0BB1  FF      		db	0ffh
0BB2  FF      		db	0ffh
0BB3  FF      		db	0ffh
0BB4  FF      		db	0ffh
0BB5  FF      		db	0ffh
0BB6  FF      		db	0ffh
0BB7  FF      		db	0ffh
0BB8  FF      		db	0ffh
0BB9  FF      		db	0ffh
0BBA  FF      		db	0ffh
0BBB  FF      		db	0ffh
0BBC  FF      		db	0ffh
0BBD  FF      		db	0ffh
0BBE  FF      		db	0ffh
0BBF  FF      		db	0ffh
0BC0  FF      		db	0ffh
0BC1  FF      		db	0ffh
0BC2  FF      		db	0ffh
0BC3  FF      		db	0ffh
0BC4  FF      		db	0ffh
0BC5  FF      		db	0ffh
0BC6  FF      		db	0ffh
0BC7  FF      		db	0ffh
0BC8  FF      		db	0ffh
0BC9  FF      		db	0ffh
0BCA  FF      		db	0ffh
0BCB  FF      		db	0ffh
0BCC  FF      		db	0ffh
0BCD  FF      		db	0ffh
0BCE  FF      		db	0ffh
0BCF  FF      		db	0ffh
0BD0  FF      		db	0ffh
0BD1  FF      		db	0ffh
0BD2  FF      		db	0ffh
0BD3  FF      		db	0ffh
0BD4  FF      		db	0ffh
0BD5  FF      		db	0ffh
0BD6  FF      		db	0ffh
0BD7  FF      		db	0ffh
0BD8  FF      		db	0ffh
0BD9  FF      		db	0ffh
0BDA  FF      		db	0ffh
0BDB  FF      		db	0ffh
0BDC  FF      		db	0ffh
0BDD  FF      		db	0ffh
0BDE  FF      		db	0ffh
0BDF  FF      		db	0ffh
0BE0  FF      		db	0ffh
0BE1  FF      		db	0ffh
0BE2  FF      		db	0ffh
0BE3  FF      		db	0ffh
0BE4  FF      		db	0ffh
0BE5  FF      		db	0ffh
0BE6  FF      		db	0ffh
0BE7  FF      		db	0ffh
0BE8  FF      		db	0ffh
0BE9  FF      		db	0ffh
0BEA  FF      		db	0ffh
0BEB  FF      		db	0ffh
0BEC  FF      		db	0ffh
0BED  FF      		db	0ffh
0BEE  FF      		db	0ffh
0BEF  FF      		db	0ffh
0BF0  FF      		db	0ffh
0BF1  FF      		db	0ffh
0BF2  FF      		db	0ffh
0BF3  FF      		db	0ffh
0BF4  FF      		db	0ffh
0BF5  FF      		db	0ffh
0BF6  FF      		db	0ffh
0BF7  FF      		db	0ffh
0BF8  FF      		db	0ffh
0BF9  FF      		db	0ffh
0BFA  FF      		db	0ffh
0BFB  FF      		db	0ffh
0BFC  FF      		db	0ffh
0BFD  FF      		db	0ffh
0BFE  FF      		db	0ffh
0BFF  FF      		db	0ffh
0C00  FF      		db	0ffh
0C01  FF      		db	0ffh
0C02  FF      		db	0ffh
0C03  FF      		db	0ffh
0C04  FF      		db	0ffh
0C05  FF      		db	0ffh
0C06  FF      		db	0ffh
0C07  FF      		db	0ffh
0C08  FF      		db	0ffh
0C09  FF      		db	0ffh
0C0A  FF      		db	0ffh
0C0B  FF      		db	0ffh
0C0C  FF      		db	0ffh
0C0D  FF      		db	0ffh
0C0E  FF      		db	0ffh
0C0F  FF      		db	0ffh
0C10  FF      		db	0ffh
0C11  FF      		db	0ffh
0C12  FF      		db	0ffh
0C13  FF      		db	0ffh
0C14  FF      		db	0ffh
0C15  FF      		db	0ffh
0C16  FF      		db	0ffh
0C17  FF      		db	0ffh
0C18  FF      		db	0ffh
0C19  FF      		db	0ffh
0C1A  FF      		db	0ffh
0C1B  FF      		db	0ffh
0C1C  FF      		db	0ffh
0C1D  FF      		db	0ffh
0C1E  FF      		db	0ffh
0C1F  FF      		db	0ffh
0C20  FF      		db	0ffh
0C21  FF      		db	0ffh
0C22  FF      		db	0ffh
0C23  FF      		db	0ffh
0C24  FF      		db	0ffh
0C25  FF      		db	0ffh
0C26  FF      		db	0ffh
0C27  FF      		db	0ffh
0C28  FF      		db	0ffh
0C29  FF      		db	0ffh
0C2A  FF      		db	0ffh
0C2B  FF      		db	0ffh
0C2C  FF      		db	0ffh
0C2D  FF      		db	0ffh
0C2E  FF      		db	0ffh
0C2F  FF      		db	0ffh
0C30  FF      		db	0ffh
0C31  FF      		db	0ffh
0C32  FF      		db	0ffh
0C33  FF      		db	0ffh
0C34  FF      		db	0ffh
0C35  FF      		db	0ffh
0C36  FF      		db	0ffh
0C37  FF      		db	0ffh
0C38  FF      		db	0ffh
0C39  FF      		db	0ffh
0C3A  FF      		db	0ffh
0C3B  FF      		db	0ffh
0C3C  FF      		db	0ffh
0C3D  FF      		db	0ffh
0C3E  FF      		db	0ffh
0C3F  FF      		db	0ffh
0C40  FF      		db	0ffh
0C41  FF      		db	0ffh
0C42  FF      		db	0ffh
0C43  FF      		db	0ffh
0C44  FF      		db	0ffh
0C45  FF      		db	0ffh
0C46  FF      		db	0ffh
0C47  FF      		db	0ffh
0C48  FF      		db	0ffh
0C49  FF      		db	0ffh
0C4A  FF      		db	0ffh
0C4B  FF      		db	0ffh
0C4C  FF      		db	0ffh
0C4D  FF      		db	0ffh
0C4E  FF      		db	0ffh
0C4F  FF      		db	0ffh
0C50  FF      		db	0ffh
0C51  FF      		db	0ffh
0C52  FF      		db	0ffh
0C53  FF      		db	0ffh
0C54  FF      		db	0ffh
0C55  FF      		db	0ffh
0C56  FF      		db	0ffh
0C57  FF      		db	0ffh
0C58  FF      		db	0ffh
0C59  FF      		db	0ffh
0C5A  FF      		db	0ffh
0C5B  FF      		db	0ffh
0C5C  FF      		db	0ffh
0C5D  FF      		db	0ffh
0C5E  FF      		db	0ffh
0C5F  FF      		db	0ffh
0C60  FF      		db	0ffh
0C61  FF      		db	0ffh
0C62  FF      		db	0ffh
0C63  FF      		db	0ffh
0C64  FF      		db	0ffh
0C65  FF      		db	0ffh
0C66  FF      		db	0ffh
0C67  FF      		db	0ffh
0C68  FF      		db	0ffh
0C69  FF      		db	0ffh
0C6A  FF      		db	0ffh
0C6B  FF      		db	0ffh
0C6C  FF      		db	0ffh
0C6D  FF      		db	0ffh
0C6E  FF      		db	0ffh
0C6F  FF      		db	0ffh
0C70  FF      		db	0ffh
0C71  FF      		db	0ffh
0C72  FF      		db	0ffh
0C73  FF      		db	0ffh
0C74  FF      		db	0ffh
0C75  FF      		db	0ffh
0C76  FF      		db	0ffh
0C77  FF      		db	0ffh
0C78  FF      		db	0ffh
0C79  FF      		db	0ffh
0C7A  FF      		db	0ffh
0C7B  FF      		db	0ffh
0C7C  FF      		db	0ffh
0C7D  FF      		db	0ffh
0C7E  FF      		db	0ffh
0C7F  FF      		db	0ffh
0C80  FF      		db	0ffh
0C81  FF      		db	0ffh
0C82  FF      		db	0ffh
0C83  FF      		db	0ffh
0C84  FF      		db	0ffh
0C85  FF      		db	0ffh
0C86  FF      		db	0ffh
0C87  FF      		db	0ffh
0C88  FF      		db	0ffh
0C89  FF      		db	0ffh
0C8A  FF      		db	0ffh
0C8B  FF      		db	0ffh
0C8C  FF      		db	0ffh
0C8D  FF      		db	0ffh
0C8E  FF      		db	0ffh
0C8F  FF      		db	0ffh
0C90  FF      		db	0ffh
0C91  FF      		db	0ffh
0C92  FF      		db	0ffh
0C93  FF      		db	0ffh
0C94  FF      		db	0ffh
0C95  FF      		db	0ffh
0C96  FF      		db	0ffh
0C97  FF      		db	0ffh
0C98  FF      		db	0ffh
0C99  FF      		db	0ffh
0C9A  FF      		db	0ffh
0C9B  FF      		db	0ffh
0C9C  FF      		db	0ffh
0C9D  FF      		db	0ffh
0C9E  FF      		db	0ffh
0C9F  FF      		db	0ffh
0CA0  FF      		db	0ffh
0CA1  FF      		db	0ffh
0CA2  FF      		db	0ffh
0CA3  FF      		db	0ffh
0CA4  FF      		db	0ffh
0CA5  FF      		db	0ffh
0CA6  FF      		db	0ffh
0CA7  FF      		db	0ffh
0CA8  FF      		db	0ffh
0CA9  FF      		db	0ffh
0CAA  FF      		db	0ffh
0CAB  FF      		db	0ffh
0CAC  FF      		db	0ffh
0CAD  FF      		db	0ffh
0CAE  FF      		db	0ffh
0CAF  FF      		db	0ffh
0CB0  FF      		db	0ffh
0CB1  FF      		db	0ffh
0CB2  FF      		db	0ffh
0CB3  FF      		db	0ffh
0CB4  FF      		db	0ffh
0CB5  FF      		db	0ffh
0CB6  FF      		db	0ffh
0CB7  FF      		db	0ffh
0CB8  FF      		db	0ffh
0CB9  FF      		db	0ffh
0CBA  FF      		db	0ffh
0CBB  FF      		db	0ffh
0CBC  FF      		db	0ffh
0CBD  FF      		db	0ffh
0CBE  FF      		db	0ffh
0CBF  FF      		db	0ffh
0CC0  FF      		db	0ffh
0CC1  FF      		db	0ffh
0CC2  FF      		db	0ffh
0CC3  FF      		db	0ffh
0CC4  FF      		db	0ffh
0CC5  FF      		db	0ffh
0CC6  FF      		db	0ffh
0CC7  FF      		db	0ffh
0CC8  FF      		db	0ffh
0CC9  FF      		db	0ffh
0CCA  FF      		db	0ffh
0CCB  FF      		db	0ffh
0CCC  FF      		db	0ffh
0CCD  FF      		db	0ffh
0CCE  FF      		db	0ffh
0CCF  FF      		db	0ffh
0CD0  FF      		db	0ffh
0CD1  FF      		db	0ffh
0CD2  FF      		db	0ffh
0CD3  FF      		db	0ffh
0CD4  FF      		db	0ffh
0CD5  FF      		db	0ffh
0CD6  FF      		db	0ffh
0CD7  FF      		db	0ffh
0CD8  FF      		db	0ffh
0CD9  FF      		db	0ffh
0CDA  FF      		db	0ffh
0CDB  FF      		db	0ffh
0CDC  FF      		db	0ffh
0CDD  FF      		db	0ffh
0CDE  FF      		db	0ffh
0CDF  FF      		db	0ffh
0CE0  FF      		db	0ffh
0CE1  FF      		db	0ffh
0CE2  FF      		db	0ffh
0CE3  FF      		db	0ffh
0CE4  FF      		db	0ffh
0CE5  FF      		db	0ffh
0CE6  FF      		db	0ffh
0CE7  FF      		db	0ffh
0CE8  FF      		db	0ffh
0CE9  FF      		db	0ffh
0CEA  FF      		db	0ffh
0CEB  FF      		db	0ffh
0CEC  FF      		db	0ffh
0CED  FF      		db	0ffh
0CEE  FF      		db	0ffh
0CEF  FF      		db	0ffh
0CF0  FF      		db	0ffh
0CF1  FF      		db	0ffh
0CF2  FF      		db	0ffh
0CF3  FF      		db	0ffh
0CF4  FF      		db	0ffh
0CF5  FF      		db	0ffh
0CF6  FF      		db	0ffh
0CF7  FF      		db	0ffh
0CF8  FF      		db	0ffh
0CF9  FF      		db	0ffh
0CFA  FF      		db	0ffh
0CFB  FF      		db	0ffh
0CFC  FF      		db	0ffh
0CFD  FF      		db	0ffh
0CFE  FF      		db	0ffh
0CFF  FF      		db	0ffh
0D00  FF      		db	0ffh
0D01  FF      		db	0ffh
0D02  FF      		db	0ffh
0D03  FF      		db	0ffh
0D04  FF      		db	0ffh
0D05  FF      		db	0ffh
0D06  FF      		db	0ffh
0D07  FF      		db	0ffh
0D08  FF      		db	0ffh
0D09  FF      		db	0ffh
0D0A  FF      		db	0ffh
0D0B  FF      		db	0ffh
0D0C  FF      		db	0ffh
0D0D  FF      		db	0ffh
0D0E  FF      		db	0ffh
0D0F  FF      		db	0ffh
0D10  FF      		db	0ffh
0D11  FF      		db	0ffh
0D12  FF      		db	0ffh
0D13  FF      		db	0ffh
0D14  FF      		db	0ffh
0D15  FF      		db	0ffh
0D16  FF      		db	0ffh
0D17  FF      		db	0ffh
0D18  FF      		db	0ffh
0D19  FF      		db	0ffh
0D1A  FF      		db	0ffh
0D1B  FF      		db	0ffh
0D1C  FF      		db	0ffh
0D1D  FF      		db	0ffh
0D1E  FF      		db	0ffh
0D1F  FF      		db	0ffh
0D20  FF      		db	0ffh
0D21  FF      		db	0ffh
0D22  FF      		db	0ffh
0D23  FF      		db	0ffh
0D24  FF      		db	0ffh
0D25  FF      		db	0ffh
0D26  FF      		db	0ffh
0D27  FF      		db	0ffh
0D28  FF      		db	0ffh
0D29  FF      		db	0ffh
0D2A  FF      		db	0ffh
0D2B  FF      		db	0ffh
0D2C  FF      		db	0ffh
0D2D  FF      		db	0ffh
0D2E  FF      		db	0ffh
0D2F  FF      		db	0ffh
0D30  FF      		db	0ffh
0D31  FF      		db	0ffh
0D32  FF      		db	0ffh
0D33  FF      		db	0ffh
0D34  FF      		db	0ffh
0D35  FF      		db	0ffh
0D36  FF      		db	0ffh
0D37  FF      		db	0ffh
0D38  FF      		db	0ffh
0D39  FF      		db	0ffh
0D3A  FF      		db	0ffh
0D3B  FF      		db	0ffh
0D3C  FF      		db	0ffh
0D3D  FF      		db	0ffh
0D3E  FF      		db	0ffh
0D3F  FF      		db	0ffh
0D40  FF      		db	0ffh
0D41  FF      		db	0ffh
0D42  FF      		db	0ffh
0D43  FF      		db	0ffh
0D44  FF      		db	0ffh
0D45  FF      		db	0ffh
0D46  FF      		db	0ffh
0D47  FF      		db	0ffh
0D48  FF      		db	0ffh
0D49  FF      		db	0ffh
0D4A  FF      		db	0ffh
0D4B  FF      		db	0ffh
0D4C  FF      		db	0ffh
0D4D  FF      		db	0ffh
0D4E  FF      		db	0ffh
0D4F  FF      		db	0ffh
0D50  FF      		db	0ffh
0D51  FF      		db	0ffh
0D52  FF      		db	0ffh
0D53  FF      		db	0ffh
0D54  FF      		db	0ffh
0D55  FF      		db	0ffh
0D56  FF      		db	0ffh
0D57  FF      		db	0ffh
0D58  FF      		db	0ffh
0D59  FF      		db	0ffh
0D5A  FF      		db	0ffh
0D5B  FF      		db	0ffh
0D5C  FF      		db	0ffh
0D5D  FF      		db	0ffh
0D5E  FF      		db	0ffh
0D5F  FF      		db	0ffh
0D60  FF      		db	0ffh
0D61  FF      		db	0ffh
0D62  FF      		db	0ffh
0D63  FF      		db	0ffh
0D64  FF      		db	0ffh
0D65  FF      		db	0ffh
0D66  FF      		db	0ffh
0D67  FF      		db	0ffh
0D68  FF      		db	0ffh
0D69  FF      		db	0ffh
0D6A  FF      		db	0ffh
0D6B  FF      		db	0ffh
0D6C  FF      		db	0ffh
0D6D  FF      		db	0ffh
0D6E  FF      		db	0ffh
0D6F  FF      		db	0ffh
0D70  FF      		db	0ffh
0D71  FF      		db	0ffh
0D72  FF      		db	0ffh
0D73  FF      		db	0ffh
0D74  FF      		db	0ffh
0D75  FF      		db	0ffh
0D76  FF      		db	0ffh
0D77  FF      		db	0ffh
0D78  FF      		db	0ffh
0D79  FF      		db	0ffh
0D7A  FF      		db	0ffh
0D7B  FF      		db	0ffh
0D7C  FF      		db	0ffh
0D7D  FF      		db	0ffh
0D7E  FF      		db	0ffh
0D7F  FF      		db	0ffh
0D80  FF      		db	0ffh
0D81  FF      		db	0ffh
0D82  FF      		db	0ffh
0D83  FF      		db	0ffh
0D84  FF      		db	0ffh
0D85  FF      		db	0ffh
0D86  FF      		db	0ffh
0D87  FF      		db	0ffh
0D88  FF      		db	0ffh
0D89  FF      		db	0ffh
0D8A  FF      		db	0ffh
0D8B  FF      		db	0ffh
0D8C  FF      		db	0ffh
0D8D  FF      		db	0ffh
0D8E  FF      		db	0ffh
0D8F  FF      		db	0ffh
0D90  FF      		db	0ffh
0D91  FF      		db	0ffh
0D92  FF      		db	0ffh
0D93  FF      		db	0ffh
0D94  FF      		db	0ffh
0D95  FF      		db	0ffh
0D96  FF      		db	0ffh
0D97  FF      		db	0ffh
0D98  FF      		db	0ffh
0D99  FF      		db	0ffh
0D9A  FF      		db	0ffh
0D9B  FF      		db	0ffh
0D9C  FF      		db	0ffh
0D9D  FF      		db	0ffh
0D9E  FF      		db	0ffh
0D9F  FF      		db	0ffh
0DA0  FF      		db	0ffh
0DA1  FF      		db	0ffh
0DA2  FF      		db	0ffh
0DA3  FF      		db	0ffh
0DA4  FF      		db	0ffh
0DA5  FF      		db	0ffh
0DA6  FF      		db	0ffh
0DA7  FF      		db	0ffh
0DA8  FF      		db	0ffh
0DA9  FF      		db	0ffh
0DAA  FF      		db	0ffh
0DAB  FF      		db	0ffh
0DAC  FF      		db	0ffh
0DAD  FF      		db	0ffh
0DAE  FF      		db	0ffh
0DAF  FF      		db	0ffh
0DB0  FF      		db	0ffh
0DB1  FF      		db	0ffh
0DB2  FF      		db	0ffh
0DB3  FF      		db	0ffh
0DB4  FF      		db	0ffh
0DB5  FF      		db	0ffh
0DB6  FF      		db	0ffh
0DB7  FF      		db	0ffh
0DB8  FF      		db	0ffh
0DB9  FF      		db	0ffh
0DBA  FF      		db	0ffh
0DBB  FF      		db	0ffh
0DBC  FF      		db	0ffh
0DBD  FF      		db	0ffh
0DBE  FF      		db	0ffh
0DBF  FF      		db	0ffh
0DC0  FF      		db	0ffh
0DC1  FF      		db	0ffh
0DC2  FF      		db	0ffh
0DC3  FF      		db	0ffh
0DC4  FF      		db	0ffh
0DC5  FF      		db	0ffh
0DC6  FF      		db	0ffh
0DC7  FF      		db	0ffh
0DC8  FF      		db	0ffh
0DC9  FF      		db	0ffh
0DCA  FF      		db	0ffh
0DCB  FF      		db	0ffh
0DCC  FF      		db	0ffh
0DCD  FF      		db	0ffh
0DCE  FF      		db	0ffh
0DCF  FF      		db	0ffh
0DD0  FF      		db	0ffh
0DD1  FF      		db	0ffh
0DD2  FF      		db	0ffh
0DD3  FF      		db	0ffh
0DD4  FF      		db	0ffh
0DD5  FF      		db	0ffh
0DD6  FF      		db	0ffh
0DD7  FF      		db	0ffh
0DD8  FF      		db	0ffh
0DD9  FF      		db	0ffh
0DDA  FF      		db	0ffh
0DDB  FF      		db	0ffh
0DDC  FF      		db	0ffh
0DDD  FF      		db	0ffh
0DDE  FF      		db	0ffh
0DDF  FF      		db	0ffh
0DE0  FF      		db	0ffh
0DE1  FF      		db	0ffh
0DE2  FF      		db	0ffh
0DE3  FF      		db	0ffh
0DE4  FF      		db	0ffh
0DE5  FF      		db	0ffh
0DE6  FF      		db	0ffh
0DE7  FF      		db	0ffh
0DE8  FF      		db	0ffh
0DE9  FF      		db	0ffh
0DEA  FF      		db	0ffh
0DEB  FF      		db	0ffh
0DEC  FF      		db	0ffh
0DED  FF      		db	0ffh
0DEE  FF      		db	0ffh
0DEF  FF      		db	0ffh
0DF0  FF      		db	0ffh
0DF1  FF      		db	0ffh
0DF2  FF      		db	0ffh
0DF3  FF      		db	0ffh
0DF4  FF      		db	0ffh
0DF5  FF      		db	0ffh
0DF6  FF      		db	0ffh
0DF7  FF      		db	0ffh
0DF8  FF      		db	0ffh
0DF9  FF      		db	0ffh
0DFA  FF      		db	0ffh
0DFB  FF      		db	0ffh
0DFC  FF      		db	0ffh
0DFD  FF      		db	0ffh
0DFE  FF      		db	0ffh
0DFF  FF      		db	0ffh
0E00  FF      		db	0ffh
0E01  FF      		db	0ffh
0E02  FF      		db	0ffh
0E03  FF      		db	0ffh
0E04  FF      		db	0ffh
0E05  FF      		db	0ffh
0E06  FF      		db	0ffh
0E07  FF      		db	0ffh
0E08  FF      		db	0ffh
0E09  FF      		db	0ffh
0E0A  FF      		db	0ffh
0E0B  FF      		db	0ffh
0E0C  FF      		db	0ffh
0E0D  FF      		db	0ffh
0E0E  FF      		db	0ffh
0E0F  FF      		db	0ffh
0E10  FF      		db	0ffh
0E11  FF      		db	0ffh
0E12  FF      		db	0ffh
0E13  FF      		db	0ffh
0E14  FF      		db	0ffh
0E15  FF      		db	0ffh
0E16  FF      		db	0ffh
0E17  FF      		db	0ffh
0E18  FF      		db	0ffh
0E19  FF      		db	0ffh
0E1A  FF      		db	0ffh
0E1B  FF      		db	0ffh
0E1C  FF      		db	0ffh
0E1D  FF      		db	0ffh
0E1E  FF      		db	0ffh
0E1F  FF      		db	0ffh
0E20  FF      		db	0ffh
0E21  FF      		db	0ffh
0E22  FF      		db	0ffh
0E23  FF      		db	0ffh
0E24  FF      		db	0ffh
0E25  FF      		db	0ffh
0E26  FF      		db	0ffh
0E27  FF      		db	0ffh
0E28  FF      		db	0ffh
0E29  FF      		db	0ffh
0E2A  FF      		db	0ffh
0E2B  FF      		db	0ffh
0E2C  FF      		db	0ffh
0E2D  FF      		db	0ffh
0E2E  FF      		db	0ffh
0E2F  FF      		db	0ffh
0E30  FF      		db	0ffh
0E31  FF      		db	0ffh
0E32  FF      		db	0ffh
0E33  FF      		db	0ffh
0E34  FF      		db	0ffh
0E35  FF      		db	0ffh
0E36  FF      		db	0ffh
0E37  FF      		db	0ffh
0E38  FF      		db	0ffh
0E39  FF      		db	0ffh
0E3A  FF      		db	0ffh
0E3B  FF      		db	0ffh
0E3C  FF      		db	0ffh
0E3D  FF      		db	0ffh
0E3E  FF      		db	0ffh
0E3F  FF      		db	0ffh
0E40  FF      		db	0ffh
0E41  FF      		db	0ffh
0E42  FF      		db	0ffh
0E43  FF      		db	0ffh
0E44  FF      		db	0ffh
0E45  FF      		db	0ffh
0E46  FF      		db	0ffh
0E47  FF      		db	0ffh
0E48  FF      		db	0ffh
0E49  FF      		db	0ffh
0E4A  FF      		db	0ffh
0E4B  FF      		db	0ffh
0E4C  FF      		db	0ffh
0E4D  FF      		db	0ffh
0E4E  FF      		db	0ffh
0E4F  FF      		db	0ffh
0E50  FF      		db	0ffh
0E51  FF      		db	0ffh
0E52  FF      		db	0ffh
0E53  FF      		db	0ffh
0E54  FF      		db	0ffh
0E55  FF      		db	0ffh
0E56  FF      		db	0ffh
0E57  FF      		db	0ffh
0E58  FF      		db	0ffh
0E59  FF      		db	0ffh
0E5A  FF      		db	0ffh
0E5B  FF      		db	0ffh
0E5C  FF      		db	0ffh
0E5D  FF      		db	0ffh
0E5E  FF      		db	0ffh
0E5F  FF      		db	0ffh
0E60  FF      		db	0ffh
0E61  FF      		db	0ffh
0E62  FF      		db	0ffh
0E63  FF      		db	0ffh
0E64  FF      		db	0ffh
0E65  FF      		db	0ffh
0E66  FF      		db	0ffh
0E67  FF      		db	0ffh
0E68  FF      		db	0ffh
0E69  FF      		db	0ffh
0E6A  FF      		db	0ffh
0E6B  FF      		db	0ffh
0E6C  FF      		db	0ffh
0E6D  FF      		db	0ffh
0E6E  FF      		db	0ffh
0E6F  FF      		db	0ffh
0E70  FF      		db	0ffh
0E71  FF      		db	0ffh
0E72  FF      		db	0ffh
0E73  FF      		db	0ffh
0E74  FF      		db	0ffh
0E75  FF      		db	0ffh
0E76  FF      		db	0ffh
0E77  FF      		db	0ffh
0E78  FF      		db	0ffh
0E79  FF      		db	0ffh
0E7A  FF      		db	0ffh
0E7B  FF      		db	0ffh
0E7C  FF      		db	0ffh
0E7D  FF      		db	0ffh
0E7E  FF      		db	0ffh
0E7F  FF      		db	0ffh
0E80  FF      		db	0ffh
0E81  FF      		db	0ffh
0E82  FF      		db	0ffh
0E83  FF      		db	0ffh
0E84  FF      		db	0ffh
0E85  FF      		db	0ffh
0E86  FF      		db	0ffh
0E87  FF      		db	0ffh
0E88  FF      		db	0ffh
0E89  FF      		db	0ffh
0E8A  FF      		db	0ffh
0E8B  FF      		db	0ffh
0E8C  FF      		db	0ffh
0E8D  FF      		db	0ffh
0E8E  FF      		db	0ffh
0E8F  FF      		db	0ffh
0E90  FF      		db	0ffh
0E91  FF      		db	0ffh
0E92  FF      		db	0ffh
0E93  FF      		db	0ffh
0E94  FF      		db	0ffh
0E95  FF      		db	0ffh
0E96  FF      		db	0ffh
0E97  FF      		db	0ffh
0E98  FF      		db	0ffh
0E99  FF      		db	0ffh
0E9A  FF      		db	0ffh
0E9B  FF      		db	0ffh
0E9C  FF      		db	0ffh
0E9D  FF      		db	0ffh
0E9E  FF      		db	0ffh
0E9F  FF      		db	0ffh
0EA0  FF      		db	0ffh
0EA1  FF      		db	0ffh
0EA2  FF      		db	0ffh
0EA3  FF      		db	0ffh
0EA4  FF      		db	0ffh
0EA5  FF      		db	0ffh
0EA6  FF      		db	0ffh
0EA7  FF      		db	0ffh
0EA8  FF      		db	0ffh
0EA9  FF      		db	0ffh
0EAA  FF      		db	0ffh
0EAB  FF      		db	0ffh
0EAC  FF      		db	0ffh
0EAD  FF      		db	0ffh
0EAE  FF      		db	0ffh
0EAF  FF      		db	0ffh
0EB0  FF      		db	0ffh
0EB1  FF      		db	0ffh
0EB2  FF      		db	0ffh
0EB3  FF      		db	0ffh
0EB4  FF      		db	0ffh
0EB5  FF      		db	0ffh
0EB6  FF      		db	0ffh
0EB7  FF      		db	0ffh
0EB8  FF      		db	0ffh
0EB9  FF      		db	0ffh
0EBA  FF      		db	0ffh
0EBB  FF      		db	0ffh
0EBC  FF      		db	0ffh
0EBD  FF      		db	0ffh
0EBE  FF      		db	0ffh
0EBF  FF      		db	0ffh
0EC0  FF      		db	0ffh
0EC1  FF      		db	0ffh
0EC2  FF      		db	0ffh
0EC3  FF      		db	0ffh
0EC4  FF      		db	0ffh
0EC5  FF      		db	0ffh
0EC6  FF      		db	0ffh
0EC7  FF      		db	0ffh
0EC8  FF      		db	0ffh
0EC9  FF      		db	0ffh
0ECA  FF      		db	0ffh
0ECB  FF      		db	0ffh
0ECC  FF      		db	0ffh
0ECD  FF      		db	0ffh
0ECE  FF      		db	0ffh
0ECF  FF      		db	0ffh
0ED0  FF      		db	0ffh
0ED1  FF      		db	0ffh
0ED2  FF      		db	0ffh
0ED3  FF      		db	0ffh
0ED4  FF      		db	0ffh
0ED5  FF      		db	0ffh
0ED6  FF      		db	0ffh
0ED7  FF      		db	0ffh
0ED8  FF      		db	0ffh
0ED9  FF      		db	0ffh
0EDA  FF      		db	0ffh
0EDB  FF      		db	0ffh
0EDC  FF      		db	0ffh
0EDD  FF      		db	0ffh
0EDE  FF      		db	0ffh
0EDF  FF      		db	0ffh
0EE0  FF      		db	0ffh
0EE1  FF      		db	0ffh
0EE2  FF      		db	0ffh
0EE3  FF      		db	0ffh
0EE4  FF      		db	0ffh
0EE5  FF      		db	0ffh
0EE6  FF      		db	0ffh
0EE7  FF      		db	0ffh
0EE8  FF      		db	0ffh
0EE9  FF      		db	0ffh
0EEA  FF      		db	0ffh
0EEB  FF      		db	0ffh
0EEC  FF      		db	0ffh
0EED  FF      		db	0ffh
0EEE  FF      		db	0ffh
0EEF  FF      		db	0ffh
0EF0  FF      		db	0ffh
0EF1  FF      		db	0ffh
0EF2  FF      		db	0ffh
0EF3  FF      		db	0ffh
0EF4  FF      		db	0ffh
0EF5  FF      		db	0ffh
0EF6  FF      		db	0ffh
0EF7  FF      		db	0ffh
0EF8  FF      		db	0ffh
0EF9  FF      		db	0ffh
0EFA  FF      		db	0ffh
0EFB  FF      		db	0ffh
0EFC  FF      		db	0ffh
0EFD  FF      		db	0ffh
0EFE  FF      		db	0ffh
0EFF  FF      		db	0ffh
0F00  FF      		db	0ffh
0F01  FF      		db	0ffh
0F02  FF      		db	0ffh
0F03  FF      		db	0ffh
0F04  FF      		db	0ffh
0F05  FF      		db	0ffh
0F06  FF      		db	0ffh
0F07  FF      		db	0ffh
0F08  FF      		db	0ffh
0F09  FF      		db	0ffh
0F0A  FF      		db	0ffh
0F0B  FF      		db	0ffh
0F0C  FF      		db	0ffh
0F0D  FF      		db	0ffh
0F0E  FF      		db	0ffh
0F0F  FF      		db	0ffh
0F10  FF      		db	0ffh
0F11  FF      		db	0ffh
0F12  FF      		db	0ffh
0F13  FF      		db	0ffh
0F14  FF      		db	0ffh
0F15  FF      		db	0ffh
0F16  FF      		db	0ffh
0F17  FF      		db	0ffh
0F18  FF      		db	0ffh
0F19  FF      		db	0ffh
0F1A  FF      		db	0ffh
0F1B  FF      		db	0ffh
0F1C  FF      		db	0ffh
0F1D  FF      		db	0ffh
0F1E  FF      		db	0ffh
0F1F  FF      		db	0ffh
0F20  FF      		db	0ffh
0F21  FF      		db	0ffh
0F22  FF      		db	0ffh
0F23  FF      		db	0ffh
0F24  FF      		db	0ffh
0F25  FF      		db	0ffh
0F26  FF      		db	0ffh
0F27  FF      		db	0ffh
0F28  FF      		db	0ffh
0F29  FF      		db	0ffh
0F2A  FF      		db	0ffh
0F2B  FF      		db	0ffh
0F2C  FF      		db	0ffh
0F2D  FF      		db	0ffh
0F2E  FF      		db	0ffh
0F2F  FF      		db	0ffh
0F30  FF      		db	0ffh
0F31  FF      		db	0ffh
0F32  FF      		db	0ffh
0F33  FF      		db	0ffh
0F34  FF      		db	0ffh
0F35  FF      		db	0ffh
0F36  FF      		db	0ffh
0F37  FF      		db	0ffh
0F38  FF      		db	0ffh
0F39  FF      		db	0ffh
0F3A  FF      		db	0ffh
0F3B  FF      		db	0ffh
0F3C  FF      		db	0ffh
0F3D  FF      		db	0ffh
0F3E  FF      		db	0ffh
0F3F  FF      		db	0ffh
0F40  FF      		db	0ffh
0F41  FF      		db	0ffh
0F42  FF      		db	0ffh
0F43  FF      		db	0ffh
0F44  FF      		db	0ffh
0F45  FF      		db	0ffh
0F46  FF      		db	0ffh
0F47  FF      		db	0ffh
0F48  FF      		db	0ffh
0F49  FF      		db	0ffh
0F4A  FF      		db	0ffh
0F4B  FF      		db	0ffh
0F4C  FF      		db	0ffh
0F4D  FF      		db	0ffh
0F4E  FF      		db	0ffh
0F4F  FF      		db	0ffh
0F50  FF      		db	0ffh
0F51  FF      		db	0ffh
0F52  FF      		db	0ffh
0F53  FF      		db	0ffh
0F54  FF      		db	0ffh
0F55  FF      		db	0ffh
0F56  FF      		db	0ffh
0F57  FF      		db	0ffh
0F58  FF      		db	0ffh
0F59  FF      		db	0ffh
0F5A  FF      		db	0ffh
0F5B  FF      		db	0ffh
0F5C  FF      		db	0ffh
0F5D  FF      		db	0ffh
0F5E  FF      		db	0ffh
0F5F  FF      		db	0ffh
0F60  FF      		db	0ffh
0F61  FF      		db	0ffh
0F62  FF      		db	0ffh
0F63  FF      		db	0ffh
0F64  FF      		db	0ffh
0F65  FF      		db	0ffh
0F66  FF      		db	0ffh
0F67  FF      		db	0ffh
0F68  FF      		db	0ffh
0F69  FF      		db	0ffh
0F6A  FF      		db	0ffh
0F6B  FF      		db	0ffh
0F6C  FF      		db	0ffh
0F6D  FF      		db	0ffh
0F6E  FF      		db	0ffh
0F6F  FF      		db	0ffh
0F70  FF      		db	0ffh
0F71  FF      		db	0ffh
0F72  FF      		db	0ffh
0F73  FF      		db	0ffh
0F74  FF      		db	0ffh
0F75  FF      		db	0ffh
0F76  FF      		db	0ffh
0F77  FF      		db	0ffh
0F78  FF      		db	0ffh
0F79  FF      		db	0ffh
0F7A  FF      		db	0ffh
0F7B  FF      		db	0ffh
0F7C  FF      		db	0ffh
0F7D  FF      		db	0ffh
0F7E  FF      		db	0ffh
0F7F  FF      		db	0ffh
0F80  FF      		db	0ffh
0F81  FF      		db	0ffh
0F82  FF      		db	0ffh
0F83  FF      		db	0ffh
0F84  FF      		db	0ffh
0F85  FF      		db	0ffh
0F86  FF      		db	0ffh
0F87  FF      		db	0ffh
0F88  FF      		db	0ffh
0F89  FF      		db	0ffh
0F8A  FF      		db	0ffh
0F8B  FF      		db	0ffh
0F8C  FF      		db	0ffh
0F8D  FF      		db	0ffh
0F8E  FF      		db	0ffh
0F8F  FF      		db	0ffh
0F90  FF      		db	0ffh
0F91  FF      		db	0ffh
0F92  FF      		db	0ffh
0F93  FF      		db	0ffh
0F94  FF      		db	0ffh
0F95  FF      		db	0ffh
0F96  FF      		db	0ffh
0F97  FF      		db	0ffh
0F98  FF      		db	0ffh
0F99  FF      		db	0ffh
0F9A  FF      		db	0ffh
0F9B  FF      		db	0ffh
0F9C  FF      		db	0ffh
0F9D  FF      		db	0ffh
0F9E  FF      		db	0ffh
0F9F  FF      		db	0ffh
0FA0  FF      		db	0ffh
0FA1  FF      		db	0ffh
0FA2  FF      		db	0ffh
0FA3  FF      		db	0ffh
0FA4  FF      		db	0ffh
0FA5  FF      		db	0ffh
0FA6  FF      		db	0ffh
0FA7  FF      		db	0ffh
0FA8  FF      		db	0ffh
0FA9  FF      		db	0ffh
0FAA  FF      		db	0ffh
0FAB  FF      		db	0ffh
0FAC  FF      		db	0ffh
0FAD  FF      		db	0ffh
0FAE  FF      		db	0ffh
0FAF  FF      		db	0ffh
0FB0  FF      		db	0ffh
0FB1  FF      		db	0ffh
0FB2  FF      		db	0ffh
0FB3  FF      		db	0ffh
0FB4  FF      		db	0ffh
0FB5  FF      		db	0ffh
0FB6  FF      		db	0ffh
0FB7  FF      		db	0ffh
0FB8  FF      		db	0ffh
0FB9  FF      		db	0ffh
0FBA  FF      		db	0ffh
0FBB  FF      		db	0ffh
0FBC  FF      		db	0ffh
0FBD  FF      		db	0ffh
0FBE  FF      		db	0ffh
0FBF  FF      		db	0ffh
0FC0  FF      		db	0ffh
0FC1  FF      		db	0ffh
0FC2  FF      		db	0ffh
0FC3  FF      		db	0ffh
0FC4  FF      		db	0ffh
0FC5  FF      		db	0ffh
0FC6  FF      		db	0ffh
0FC7  FF      		db	0ffh
0FC8  FF      		db	0ffh
0FC9  FF      		db	0ffh
0FCA  FF      		db	0ffh
0FCB  FF      		db	0ffh
0FCC  FF      		db	0ffh
0FCD  FF      		db	0ffh
0FCE  FF      		db	0ffh
0FCF  FF      		db	0ffh
0FD0  FF      		db	0ffh
0FD1  FF      		db	0ffh
0FD2  FF      		db	0ffh
0FD3  FF      		db	0ffh
0FD4  FF      		db	0ffh
0FD5  FF      		db	0ffh
0FD6  FF      		db	0ffh
0FD7  FF      		db	0ffh
0FD8  FF      		db	0ffh
0FD9  FF      		db	0ffh
0FDA  FF      		db	0ffh
0FDB  FF      		db	0ffh
0FDC  FF      		db	0ffh
0FDD  FF      		db	0ffh
0FDE  FF      		db	0ffh
0FDF  FF      		db	0ffh
0FE0  FF      		db	0ffh
0FE1  FF      		db	0ffh
0FE2  FF      		db	0ffh
0FE3  FF      		db	0ffh
0FE4  FF      		db	0ffh
0FE5  FF      		db	0ffh
0FE6  FF      		db	0ffh
0FE7  FF      		db	0ffh
0FE8  FF      		db	0ffh
0FE9  FF      		db	0ffh
0FEA  FF      		db	0ffh
0FEB  FF      		db	0ffh
0FEC  FF      		db	0ffh
0FED  FF      		db	0ffh
0FEE  FF      		db	0ffh
0FEF  FF      		db	0ffh
0FF0  FF      		db	0ffh
0FF1  FF      		db	0ffh
0FF2  FF      		db	0ffh
0FF3  FF      		db	0ffh
0FF4  FF      		db	0ffh
0FF5  FF      		db	0ffh
0FF6  FF      		db	0ffh
0FF7  FF      		db	0ffh
0FF8  FF      		db	0ffh
0FF9  FF      		db	0ffh
0FFA  FF      		db	0ffh
0FFB  FF      		db	0ffh
0FFC  FF      		db	0ffh
0FFD  FF      		db	0ffh
0FFE  FF      		db	0ffh
0FFF  FF      		db	0ffh
		
		; RAM used...
FF00          		org	0ff00h
FF00          	addr0:	ds	2
FF02          	addr1:	ds	2
FF04          	line:	ds	64
		
FF44          		end



Statistics:

     4	passes
     0	jr promotions
   227	symbols
  4096	bytes

  1928	macro calls
  3775	macro bytes
     0	invented symbols
